{"ast":null,"code":"var _jsxFileName = \"/Users/earth/WebstormProjects/arminian-perspective-blog/client/components/layout/navbar/navLinks.js\";\nvar __jsx = React.createElement;\nimport { fullNavPages, shortNavPages } from \"../../../lib/navPages\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { ListItem, PseudoBox, useColorMode } from \"@chakra-ui/core\";\nimport { borderColor } from \"../../../customTheme\";\nimport React, { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../../../context/global.context\";\n\nconst navLinks = () => {\n  const pathName = useRouter().pathname;\n  const {\n    width\n  } = useContext(GlobalContext);\n  let navPages = width > 768 ? shortNavPages : fullNavPages;\n  const {\n    colorMode\n  } = useColorMode();\n  return navPages.map(({\n    label,\n    path\n  }) => {\n    const border = pathName === path ? borderColor[colorMode] : \"transparent\";\n    return __jsx(PseudoBox, {\n      border: \"1px\",\n      borderColor: border,\n      as: ListItem,\n      key: path,\n      className: \"link\",\n      _hover: {\n        border: \"1px\",\n        borderColor: borderColor[colorMode]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, __jsx(Link, {\n      href: path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      className: \"border-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, label)));\n  });\n};\n\nexport default navLinks;","map":{"version":3,"sources":["/Users/earth/WebstormProjects/arminian-perspective-blog/client/components/layout/navbar/navLinks.js"],"names":["fullNavPages","shortNavPages","Link","useRouter","ListItem","PseudoBox","useColorMode","borderColor","React","useContext","useEffect","GlobalContext","navLinks","pathName","pathname","width","navPages","colorMode","map","label","path","border"],"mappings":";;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,uBAA5C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,YAA9B,QAAkD,iBAAlD;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,aAAT,QAA8B,iCAA9B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGV,SAAS,GAAGW,QAA7B;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAYN,UAAU,CAACE,aAAD,CAA5B;AAEA,MAAIK,QAAQ,GAAGD,KAAK,GAAG,GAAR,GAAcd,aAAd,GAA8BD,YAA7C;AAEA,QAAM;AAAEiB,IAAAA;AAAF,MAAgBX,YAAY,EAAlC;AAEA,SAAOU,QAAQ,CAACE,GAAT,CAAa,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAqB;AACvC,UAAMC,MAAM,GAAGR,QAAQ,KAAKO,IAAb,GAAoBb,WAAW,CAACU,SAAD,CAA/B,GAA6C,aAA5D;AAEA,WACE,MAAC,SAAD;AACE,MAAA,MAAM,EAAC,KADT;AAEE,MAAA,WAAW,EAAEI,MAFf;AAGE,MAAA,EAAE,EAAEjB,QAHN;AAIE,MAAA,GAAG,EAAEgB,IAJP;AAKE,MAAA,SAAS,EAAC,MALZ;AAME,MAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBd,QAAAA,WAAW,EAAEA,WAAW,CAACU,SAAD;AAAzC,OANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEG,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,KAA5B,CADF,CARF,CADF;AAcD,GAjBM,CAAP;AAkBD,CA3BD;;AA6BA,eAAeP,QAAf","sourcesContent":["import { fullNavPages, shortNavPages } from \"../../../lib/navPages\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { ListItem, PseudoBox, useColorMode } from \"@chakra-ui/core\";\nimport { borderColor } from \"../../../customTheme\";\nimport React, { useContext, useEffect } from \"react\";\nimport { GlobalContext } from \"../../../context/global.context\";\n\nconst navLinks = () => {\n  const pathName = useRouter().pathname;\n\n  const { width } = useContext(GlobalContext);\n\n  let navPages = width > 768 ? shortNavPages : fullNavPages;\n\n  const { colorMode } = useColorMode();\n\n  return navPages.map(({ label, path }) => {\n    const border = pathName === path ? borderColor[colorMode] : \"transparent\";\n\n    return (\n      <PseudoBox\n        border=\"1px\"\n        borderColor={border}\n        as={ListItem}\n        key={path}\n        className=\"link\"\n        _hover={{ border: \"1px\", borderColor: borderColor[colorMode] }}\n      >\n        <Link href={path}>\n          <a className=\"border-none\">{label}</a>\n        </Link>\n      </PseudoBox>\n    );\n  });\n};\n\nexport default navLinks;\n"]},"metadata":{},"sourceType":"module"}