{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/earth/WebstormProjects/arminian-perspective-blog/client/components/layout/navbar/Navbar.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useToggle } from \"../../../hooks/useToggle\";\nimport navLinks from \"./NavLinks\";\nimport React from \"react\";\nimport Box from \"@chakra-ui/core/dist/Box\";\nimport { borderColor, color } from \"../../../customTheme\";\nimport { List, useColorMode } from \"@chakra-ui/core\";\nimport NavLinks from './NavLinks';\n\nvar Navbar = function Navbar() {\n  _s();\n\n  var _useToggle = useToggle(),\n      isToggled = _useToggle.isToggled,\n      toggle = _useToggle.toggle;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  return __jsx(Box, {\n    color: color[colorMode],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    borderBottom: \"1px\",\n    borderColor: borderColor[colorMode],\n    className: \"nav-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(List, {\n    className: \"nav-list-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, navLinks()), __jsx(\"button\", {\n    onClick: toggle,\n    className: \"menu-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"\\u043C\\u0435\\u043D\\u044E\")), isToggled && __jsx(List, {\n    py: \"2\",\n    borderColor: borderColor[colorMode],\n    className: \"nav-list-container-mobile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, NavLinks()));\n};\n\n_s(Navbar, \"9AMqtsqqEx6IPfuH2MZWmiEXBOM=\", false, function () {\n  return [useToggle, useColorMode];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/earth/WebstormProjects/arminian-perspective-blog/client/components/layout/navbar/Navbar.tsx"],"names":["useToggle","navLinks","React","Box","borderColor","color","List","useColorMode","NavLinks","Navbar","isToggled","toggle","colorMode"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,0BAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,sBAAnC;AACA,SAASC,IAAT,EAAeC,YAAf,QAAmC,iBAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,mBACWT,SAAS,EADpB;AAAA,MACXU,SADW,cACXA,SADW;AAAA,MACAC,MADA,cACAA,MADA;;AAAA,sBAEGJ,YAAY,EAFf;AAAA,MAEXK,SAFW,iBAEXA,SAFW;;AAInB,SACE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAEP,KAAK,CAACO,SAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,YAAY,EAAC,KADf;AAEE,IAAA,WAAW,EAAER,WAAW,CAACQ,SAAD,CAF1B;AAGE,IAAA,SAAS,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCX,QAAQ,EAA9C,CALF,EAME;AAAQ,IAAA,OAAO,EAAEU,MAAjB;AAAyB,IAAA,SAAS,EAAC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANF,CADF,EAWGD,SAAS,IACR,MAAC,IAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,WAAW,EAAEN,WAAW,CAACQ,SAAD,CAF1B;AAGE,IAAA,SAAS,EAAC,2BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGJ,QAAQ,EALX,CAZJ,CADF;AAuBD,CA3BD;;GAAMC,M;UAC0BT,S,EACRO,Y;;;KAFlBE,M;AA6BN,eAAeA,MAAf","sourcesContent":["import { useToggle } from \"../../../hooks/useToggle\";\nimport navLinks from \"./NavLinks\";\nimport React from \"react\";\nimport Box from \"@chakra-ui/core/dist/Box\";\nimport { borderColor, color } from \"../../../customTheme\";\nimport { List, useColorMode } from \"@chakra-ui/core\";\nimport NavLinks from './NavLinks';\n\nconst Navbar = () => {\n  const { isToggled, toggle } = useToggle();\n  const { colorMode } = useColorMode();\n\n  return (\n    <Box color={color[colorMode]}>\n      <Box\n        borderBottom=\"1px\"\n        borderColor={borderColor[colorMode]}\n        className=\"nav-container\"\n      >\n        <List className=\"nav-list-container\">{navLinks()}</List>\n        <button onClick={toggle} className=\"menu-button\">\n          меню\n        </button>\n      </Box>\n      {isToggled && (\n        <List\n          py=\"2\"\n          borderColor={borderColor[colorMode]}\n          className=\"nav-list-container-mobile\"\n        >\n          {NavLinks()}\n        </List>\n      )}\n    </Box>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}