{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\blog\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { useColorMode } from \"@chakra-ui/core\";\nimport { borderColor, color } from \"../customTheme\";\nimport Grid from \"@chakra-ui/core/dist/Grid\";\nimport Divider from \"@chakra-ui/core/dist/Divider\";\nimport Aside from \"../components/aside/Aside\";\nimport Previews from \"../components/posts-preview/Previews\";\nimport { useGetPosts } from \"../actions\";\n\nvar App = function App(_ref) {\n  _s();\n\n  var posts = _ref.posts;\n\n  var _useContext = useContext(GlobalContext),\n      setListView = _useContext.setListView;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var width = useWindowWidth();\n  useEffect(function () {\n    width <= 768 && setListView(false);\n  }, [width]);\n  var initialData = posts && [posts];\n\n  var _useGetPosts = useGetPosts(initialData),\n      paginatedPosts = _useGetPosts.data,\n      size = _useGetPosts.size,\n      setSize = _useGetPosts.setSize; // const increaseSize = () => !isReachingEnd && setSize((prev) => prev + 1);\n  //\n  // useEffect(() => {\n  //   window.addEventListener(\"scroll\", () => handleScroll(increaseSize));\n  //   return () =>\n  //     window.removeEventListener(\"scroll\", () => handleScroll(increaseSize));\n  // }, []);\n\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    templateColumns: \"5fr auto 1fr\",\n    gap: 6,\n    color: color[colorMode],\n    className: \"article-body-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(Previews, {\n    paginatedPosts: paginatedPosts,\n    size: size,\n    setSize: setSize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), __jsx(Divider, {\n    borderColor: borderColor[colorMode],\n    orientation: \"vertical\",\n    my: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), __jsx(Aside, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(App, \"4Nu9UZue1URhNZXyJ/iX9v4JDC8=\", false, function () {\n  return [useColorMode, useWindowWidth, useGetPosts];\n});\n\n_c = App;\nexport var __N_SSG = true;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/blog/arminian-perspective-blog/client/pages/index.js"],"names":["React","useContext","useEffect","Layout","useWindowWidth","GlobalContext","useColorMode","borderColor","color","Grid","Divider","Aside","Previews","useGetPosts","App","posts","setListView","colorMode","width","initialData","paginatedPosts","data","size","setSize"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,gBAAnC;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAWA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAe;AAAA;;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,oBACDd,UAAU,CAACI,aAAD,CADT;AAAA,MACjBW,WADiB,eACjBA,WADiB;;AAAA,sBAGHV,YAAY,EAHT;AAAA,MAGjBW,SAHiB,iBAGjBA,SAHiB;;AAKzB,MAAMC,KAAK,GAAGd,cAAc,EAA5B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,KAAK,IAAI,GAAT,IAAgBF,WAAW,CAAC,KAAD,CAA3B;AACD,GAFQ,EAEN,CAACE,KAAD,CAFM,CAAT;AAIA,MAAMC,WAAW,GAAGJ,KAAK,IAAI,CAACA,KAAD,CAA7B;;AAXyB,qBAauBF,WAAW,CAACM,WAAD,CAblC;AAAA,MAaXC,cAbW,gBAajBC,IAbiB;AAAA,MAaKC,IAbL,gBAaKA,IAbL;AAAA,MAaWC,OAbX,gBAaWA,OAbX,EAezB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,eAAe,EAAC,cADlB;AAEE,IAAA,GAAG,EAAE,CAFP;AAGE,IAAA,KAAK,EAAEf,KAAK,CAACS,SAAD,CAHd;AAIE,IAAA,SAAS,EAAC,wBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,QAAD;AACE,IAAA,cAAc,EAAEG,cADlB;AAEE,IAAA,IAAI,EAAEE,IAFR;AAGE,IAAA,OAAO,EAAEC,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE,MAAC,OAAD;AACE,IAAA,WAAW,EAAEhB,WAAW,CAACU,SAAD,CAD1B;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,EAAE,EAAC,GAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAgBE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF,CADF;AAsBD,CA7CD;;GAAMH,G;UAGkBR,Y,EAERF,c,EAQkCS,W;;;KAb5CC,G;;AA+CN,eAAeA,GAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { useColorMode } from \"@chakra-ui/core\";\nimport { borderColor, color } from \"../customTheme\";\nimport Grid from \"@chakra-ui/core/dist/Grid\";\nimport Divider from \"@chakra-ui/core/dist/Divider\";\nimport Aside from \"../components/aside/Aside\";\nimport Previews from \"../components/posts-preview/Previews\";\nimport { useGetPosts } from \"../actions\";\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nconst App = ({ posts }) => {\n  const { setListView } = useContext(GlobalContext);\n\n  const { colorMode } = useColorMode();\n\n  const width = useWindowWidth();\n\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n\n  const initialData = posts && [posts];\n\n  const { data: paginatedPosts, size, setSize } = useGetPosts(initialData);\n\n  // const increaseSize = () => !isReachingEnd && setSize((prev) => prev + 1);\n  //\n  // useEffect(() => {\n  //   window.addEventListener(\"scroll\", () => handleScroll(increaseSize));\n  //   return () =>\n  //     window.removeEventListener(\"scroll\", () => handleScroll(increaseSize));\n  // }, []);\n\n  return (\n    <Layout>\n      <Grid\n        templateColumns=\"5fr auto 1fr\"\n        gap={6}\n        color={color[colorMode]}\n        className=\"article-body-container\"\n      >\n        <Previews\n          paginatedPosts={paginatedPosts}\n          size={size}\n          setSize={setSize}\n        />\n        <Divider\n          borderColor={borderColor[colorMode]}\n          orientation=\"vertical\"\n          my=\"6\"\n        />\n        <Aside />\n      </Grid>\n    </Layout>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}