{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\post\\\\[slug].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport Layout from \"components/layout/Layout\";\nimport { urlFor } from \"lib/helpers\";\nimport { getSinglePost, getAllPosts } from \"lib/api\";\nimport client from \"../../lib/client\";\nimport PostCover from \"../../components/PostCover\";\nimport { format } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport PublishedDate from \"../../components/PublishedDate\";\nimport PostBody from \"../../components/PostBody\";\n\nconst Post = ({\n  post: {\n    mainImage,\n    title,\n    subtitle,\n    publishedAt,\n    name,\n    body,\n    categories\n  }\n}) => {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"article\", {\n    className: \"h-full mt-6 mb-20 text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, mainImage && __jsx(PostCover, {\n    mainImage: mainImage,\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }\n  }), __jsx(PostBody, {\n    title: title,\n    subtitle: subtitle,\n    body: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"py-2 flex justify-between text-sm text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"hover:text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, name), __jsx(PublishedDate, {\n    publishedAt: publishedAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport async function getStaticProps({\n  params\n}) {\n  const post = await getSinglePost(params.slug);\n  return {\n    props: {\n      post\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const posts = await getAllPosts();\n  return {\n    paths: posts.map(post => ({\n      params: {\n        slug: post.slug.current\n      }\n    })),\n    fallback: false\n  };\n}\nexport default Post;","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/post/[slug].js"],"names":["React","BlockContent","Layout","urlFor","getSinglePost","getAllPosts","client","PostCover","format","ru","PublishedDate","PostBody","Post","post","mainImage","title","subtitle","publishedAt","name","body","categories","getStaticProps","params","slug","props","getStaticPaths","posts","paths","map","current","fallback"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,SAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA,WAA9B;AAA2CC,IAAAA,IAA3C;AAAiDC,IAAAA,IAAjD;AAAuDC,IAAAA;AAAvD;AADM,CAAD,KAEP;AACJ,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,iCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,IAAI,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEA,SAAtB;AAAiC,IAAA,KAAK,EAAEC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,EAEE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAwB,IAAA,QAAQ,EAAEC,QAAlC;AAA4C,IAAA,IAAI,EAAEG,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCD,IAAvC,CADF,EAEE,MAAC,aAAD;AAAe,IAAA,WAAW,EAAED,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,CADF,CADF;AAmBD,CAtBD;;AAwBA,OAAO,eAAeI,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMT,IAAI,GAAG,MAAMT,aAAa,CAACkB,MAAM,CAACC,IAAR,CAAhC;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLX,MAAAA;AADK;AADF,GAAP;AAKD;AAED,OAAO,eAAeY,cAAf,GAAgC;AACrC,QAAMC,KAAK,GAAG,MAAMrB,WAAW,EAA/B;AAEA,SAAO;AACLsB,IAAAA,KAAK,EAAED,KAAK,CAACE,GAAN,CAAWf,IAAD,KAAW;AAC1BS,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEV,IAAI,CAACU,IAAL,CAAUM;AAAlB;AADkB,KAAX,CAAV,CADF;AAILC,IAAAA,QAAQ,EAAE;AAJL,GAAP;AAMD;AAED,eAAelB,IAAf","sourcesContent":["import React from \"react\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport Layout from \"components/layout/Layout\";\nimport { urlFor } from \"lib/helpers\";\nimport { getSinglePost, getAllPosts } from \"lib/api\";\nimport client from \"../../lib/client\";\nimport PostCover from \"../../components/PostCover\";\nimport { format } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport PublishedDate from \"../../components/PublishedDate\";\nimport PostBody from \"../../components/PostBody\";\n\nconst Post = ({\n  post: { mainImage, title, subtitle, publishedAt, name, body, categories },\n}) => {\n  return (\n    <Layout>\n      <article className=\"h-full mt-6 mb-20 text-gray-800\">\n        {mainImage && <PostCover mainImage={mainImage} title={title} />}\n        <PostBody title={title} subtitle={subtitle} body={body} />\n        <div className=\"py-2 flex justify-between text-sm text-gray-600\">\n          <span className=\"hover:text-gray-800\">{name}</span>\n          <PublishedDate publishedAt={publishedAt} />\n        </div>\n        {/*{categories && (*/}\n        {/*  <ul>*/}\n        {/*    {categories.map((category) => (*/}\n        {/*      <li key={category}>{category}</li>*/}\n        {/*    ))}*/}\n        {/*  </ul>*/}\n        {/*)}*/}\n      </article>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps({ params }) {\n  const post = await getSinglePost(params.slug);\n  return {\n    props: {\n      post,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const posts = await getAllPosts();\n\n  return {\n    paths: posts.map((post) => ({\n      params: { slug: post.slug.current },\n    })),\n    fallback: false,\n  };\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}