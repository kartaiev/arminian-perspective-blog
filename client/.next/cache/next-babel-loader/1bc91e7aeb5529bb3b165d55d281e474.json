{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport client from \"../client\";\nimport groq from \"groq\";\nimport Link from \"next\";\n\nconst App = ({\n  posts = []\n}) => {\n  console.log(posts);\n  const previews = posts.map(({\n    _id,\n    title = \"\",\n    slug = \"\",\n    _updatedAt = \"\"\n  }) => slug && __jsx(\"li\", {\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 15\n    }\n  }, title));\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"grid grid-cols-1 gap-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, previews));\n};\n\nApp.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\"]|order(publishedAt desc)\n    `)\n});\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/index.js"],"names":["React","Layout","client","groq","Link","App","posts","console","log","previews","map","_id","title","slug","_updatedAt","getInitialProps","fetch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAD,KAAoB;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,QAAQ,GAAGH,KAAK,CAACI,GAAN,CACf,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAK,GAAG,EAAf;AAAmBC,IAAAA,IAAI,GAAG,EAA1B;AAA8BC,IAAAA,UAAU,GAAG;AAA3C,GAAD,KACED,IAAI,IAAI;AAAI,IAAA,GAAG,EAAEF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeC,KAAf,CAFK,CAAjB;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCH,QAAzC,CADF,CADF;AAgBD,CAtBD;;AAwBAJ,GAAG,CAACU,eAAJ,GAAsB,aAAa;AACjCT,EAAAA,KAAK,EAAE,MAAMJ,MAAM,CAACc,KAAP,CAAab,IAAK;;KAAlB;AADoB,CAAb,CAAtB;;AAMA,eAAeE,GAAf","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport client from \"../client\";\nimport groq from \"groq\";\nimport Link from \"next\";\n\nconst App = ({ posts = [] }) => {\n  console.log(posts);\n  const previews = posts.map(\n    ({ _id, title = \"\", slug = \"\", _updatedAt = \"\" }) =>\n      slug && <li key={_id}>{title}</li>\n  );\n  return (\n    <Layout>\n      <div className=\"grid grid-cols-1 gap-6\">{previews}</div>\n      {/*{posts.map(*/}\n      {/*  ({ _id, title = \"\", slug = \"\", _updatedAt = \"\" }) =>*/}\n      {/*    slug && (*/}\n      {/*      <li key={_id}>*/}\n      {/*        <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>*/}\n      {/*          <a>{title}</a>*/}\n      {/*        </Link>{\" \"}*/}\n      {/*        ({new Date(_updatedAt).toDateString()})*/}\n      {/*      </li>*/}\n      {/*    )*/}\n      {/*)}*/}\n    </Layout>\n  );\n};\n\nApp.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n      *[_type == \"post\"]|order(publishedAt desc)\n    `),\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}