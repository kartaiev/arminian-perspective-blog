{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\post\\\\[slug].js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport client from \"lib/client\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport Layout from \"components/layout/Layout\";\nimport { urlFor } from \"lib/helpers\";\n\nvar Post = function Post(post) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"article\", {\n    className: \"h-full mb-20\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, post.mainImage && __jsx(\"div\", {\n    className: \"mainImage-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    className: \"w-full h-full block object-cover top-0 left-0 align-top\",\n    src: urlFor(post.mainImage).auto(\"format\").url(),\n    alt: post.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"max-w-4xl p-8 mx-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"font-bold mb-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, post.title), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, post.name), post.categories && __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Posted in\", post.categories.map(function (category) {\n    return __jsx(\"li\", {\n      key: category,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, category);\n  })), __jsx(BlockContent, _extends({\n    blocks: post.body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: \"max\"\n    }\n  }, client.config(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })))));\n};\n\n_c = Post;\nexport var __N_SSG = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/post/[slug].js"],"names":["React","client","BlockContent","Layout","urlFor","Post","post","mainImage","auto","url","title","name","categories","map","category","body","w","h","fit","config"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD,EAAU;AACrB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACC,SAAL,IACC;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,yDADZ;AAEE,IAAA,GAAG,EAAEH,MAAM,CAACE,IAAI,CAACC,SAAN,CAAN,CAAuBC,IAAvB,CAA4B,QAA5B,EAAsCC,GAAtC,EAFP;AAGE,IAAA,GAAG,EAAEH,IAAI,CAACI,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,EAUE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCJ,IAAI,CAACI,KAArC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,IAAI,CAACK,IAAZ,CAFF,EAGGL,IAAI,CAACM,UAAL,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEGN,IAAI,CAACM,UAAL,CAAgBC,GAAhB,CAAoB,UAACC,QAAD;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBA,QAApB,CADmB;AAAA,GAApB,CAFH,CAJJ,EAWE,MAAC,YAAD;AACE,IAAA,MAAM,EAAER,IAAI,CAACS,IADf;AAEE,IAAA,YAAY,EAAE;AAAEC,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAFhB,KAGMjB,MAAM,CAACkB,MAAP,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXF,CAVF,CADF,CADF;AAgCD,CAjCD;;KAAMd,I;;AAuDN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport client from \"lib/client\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport Layout from \"components/layout/Layout\";\nimport { urlFor } from \"lib/helpers\";\nimport { getSinglePost, getAllPosts } from \"lib/api\";\n\nconst Post = (post) => {\n  return (\n    <Layout>\n      <article className=\"h-full mb-20\">\n        {post.mainImage && (\n          <div className=\"mainImage-container\">\n            <img\n              className=\"w-full h-full block object-cover top-0 left-0 align-top\"\n              src={urlFor(post.mainImage).auto(\"format\").url()}\n              alt={post.title}\n            />\n          </div>\n        )}\n        <div className=\"max-w-4xl p-8 mx-auto\">\n          <h1 className=\"font-bold mb-6\">{post.title}</h1>\n          <span>{post.name}</span>\n          {post.categories && (\n            <ul>\n              Posted in\n              {post.categories.map((category) => (\n                <li key={category}>{category}</li>\n              ))}\n            </ul>\n          )}\n          <BlockContent\n            blocks={post.body}\n            imageOptions={{ w: 320, h: 240, fit: \"max\" }}\n            {...client.config()}\n          />\n        </div>\n      </article>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps({ params }) {\n  const post = await getSinglePost(params.slug);\n  return {\n    props: {\n      post,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const posts = await getAllPosts();\n\n  return {\n    paths: posts.map((post) => ({\n      params: { slug: post.slug.current },\n    })),\n    fallback: false,\n  };\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}