{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\blog\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport IconsBtn from \"../components/shared/IconsBtn\";\nimport { downChevron } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { FiList } from \"react-icons/fi\";\nimport { useGetPosts } from \"../actions\";\nimport Button from \"@chakra-ui/core/dist/Button\";\nimport { Skeleton, useColorMode } from \"@chakra-ui/core\";\nimport { PAGE_SIZE } from \"../lib/vars\";\nimport { BsGrid } from \"react-icons/bs\";\nimport Box from \"@chakra-ui/core/dist/Box\";\nimport { borderColor, color } from \"../customTheme\";\nimport Grid from \"@chakra-ui/core/dist/Grid\";\nimport Divider from \"@chakra-ui/core/dist/Divider\";\nimport Aside from \"../components/aside/Aside\";\n\nvar App = function App(_ref) {\n  _s();\n\n  var _paginatedPosts, _paginatedPosts$, _paginatedPosts2;\n\n  var posts = _ref.posts;\n\n  var _useContext = useContext(GlobalContext),\n      setListView = _useContext.setListView,\n      isListView = _useContext.isListView,\n      switchView = _useContext.switchView;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var width = useWindowWidth();\n  useEffect(function () {\n    width <= 768 && setListView(false);\n  }, [width]);\n  var isEmpty = ((_paginatedPosts = paginatedPosts) === null || _paginatedPosts === void 0 ? void 0 : (_paginatedPosts$ = _paginatedPosts[0]) === null || _paginatedPosts$ === void 0 ? void 0 : _paginatedPosts$.length) === 0;\n  var isReachingEnd = isEmpty || paginatedPosts && ((_paginatedPosts2 = paginatedPosts[paginatedPosts.length - 1]) === null || _paginatedPosts2 === void 0 ? void 0 : _paginatedPosts2.length) < PAGE_SIZE; // const increaseSize = () => !isReachingEnd && setSize((prev) => prev + 1);\n  //\n  // useEffect(() => {\n  //   window.addEventListener(\"scroll\", () => handleScroll(increaseSize));\n  //   return () =>\n  //     window.removeEventListener(\"scroll\", () => handleScroll(increaseSize));\n  // }, []);\n\n  if (!paginatedPosts) return \"loading\";\n  var previews = paginatedPosts && paginatedPosts.map(function (el) {\n    return el.map(function (_ref2) {\n      var _id = _ref2._id,\n          title = _ref2.title,\n          subtitle = _ref2.subtitle,\n          slug = _ref2.slug,\n          mainImage = _ref2.mainImage,\n          publishedAt = _ref2.publishedAt,\n          body = _ref2.body;\n      return __jsx(PostCard, {\n        key: _id,\n        title: title,\n        subtitle: subtitle,\n        slug: slug,\n        mainImage: mainImage,\n        publishedAt: publishedAt,\n        body: body,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      });\n    });\n  });\n  var previewClass = isListView ? \"md:mx-16 ip:ml-48\" : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    templateColumns: \"5fr auto 1fr\",\n    gap: 6,\n    color: color[colorMode],\n    className: \"article-body-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"view-button-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(IconsBtn, {\n    whileHover: {\n      scale: 1.2\n    },\n    firstIcon: BsGrid,\n    secondIcon: FiList,\n    toggle: switchView,\n    isToggled: isListView,\n    className: \"ease\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), __jsx(Skeleton, {\n    isLoaded: paginatedPosts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    color: color[colorMode],\n    className: \"preview-container \".concat(previewClass),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, previews)), __jsx(\"div\", {\n    className: \"preview-button-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    disabled: isReachingEnd,\n    size: \"lg\",\n    rounded: \"full\",\n    onClick: function onClick() {\n      return !isReachingEnd && setSize(size + 1);\n    },\n    variant: \"outline\",\n    borderColor: borderColor[colorMode],\n    _focus: {\n      outline: \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, downChevron(isReachingEnd)))), __jsx(Divider, {\n    borderColor: borderColor[colorMode],\n    orientation: \"vertical\",\n    my: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), __jsx(Aside, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(App, \"dTU5zn7Oj061DZ41qNAp9omZm3U=\", false, function () {\n  return [useColorMode, useWindowWidth];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/blog/arminian-perspective-blog/client/pages/index.js"],"names":["React","useContext","useEffect","Layout","getAllPosts","IconsBtn","downChevron","PostCard","useWindowWidth","GlobalContext","FiList","useGetPosts","Button","Skeleton","useColorMode","PAGE_SIZE","BsGrid","Box","borderColor","color","Grid","Divider","Aside","App","posts","setListView","isListView","switchView","colorMode","width","isEmpty","paginatedPosts","length","isReachingEnd","previews","map","el","_id","title","subtitle","slug","mainImage","publishedAt","body","previewClass","scale","setSize","size","outline"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport IconsBtn from \"../components/shared/IconsBtn\";\nimport { downChevron } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { FiList } from \"react-icons/fi\";\nimport { useGetPosts } from \"../actions\";\nimport Button from \"@chakra-ui/core/dist/Button\";\nimport { Skeleton, useColorMode } from \"@chakra-ui/core\";\nimport { PAGE_SIZE } from \"../lib/vars\";\nimport { BsGrid } from \"react-icons/bs\";\nimport Box from \"@chakra-ui/core/dist/Box\";\nimport { borderColor, color } from \"../customTheme\";\nimport Grid from \"@chakra-ui/core/dist/Grid\";\nimport Divider from \"@chakra-ui/core/dist/Divider\";\nimport Aside from \"../components/aside/Aside\";\n\nconst App = ({ posts }) => {\n  const { setListView, isListView, switchView } = useContext(GlobalContext);\n\n  const { colorMode } = useColorMode();\n\n  const width = useWindowWidth();\n\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n\n  const isEmpty = paginatedPosts?.[0]?.length === 0;\n  const isReachingEnd =\n    isEmpty ||\n    (paginatedPosts &&\n      paginatedPosts[paginatedPosts.length - 1]?.length < PAGE_SIZE);\n\n  // const increaseSize = () => !isReachingEnd && setSize((prev) => prev + 1);\n  //\n  // useEffect(() => {\n  //   window.addEventListener(\"scroll\", () => handleScroll(increaseSize));\n  //   return () =>\n  //     window.removeEventListener(\"scroll\", () => handleScroll(increaseSize));\n  // }, []);\n\n  if (!paginatedPosts) return \"loading\";\n\n  const previews =\n    paginatedPosts &&\n    paginatedPosts.map((el) =>\n      el.map(({ _id, title, subtitle, slug, mainImage, publishedAt, body }) => (\n        <PostCard\n          key={_id}\n          title={title}\n          subtitle={subtitle}\n          slug={slug}\n          mainImage={mainImage}\n          publishedAt={publishedAt}\n          body={body}\n        />\n      ))\n    );\n\n  const previewClass = isListView\n    ? \"md:mx-16 ip:ml-48\"\n    : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n\n  return (\n    <Layout>\n      <Grid\n        templateColumns=\"5fr auto 1fr\"\n        gap={6}\n        color={color[colorMode]}\n        className=\"article-body-container\"\n      >\n        <Box>\n          <div className=\"view-button-container\">\n            <IconsBtn\n              whileHover={{ scale: 1.2 }}\n              firstIcon={BsGrid}\n              secondIcon={FiList}\n              toggle={switchView}\n              isToggled={isListView}\n              className=\"ease\"\n            />\n          </div>\n          <Skeleton isLoaded={paginatedPosts}>\n            <Box\n              color={color[colorMode]}\n              className={`preview-container ${previewClass}`}\n            >\n              {previews}\n            </Box>\n          </Skeleton>\n          <div className=\"preview-button-container\">\n            <Button\n              disabled={isReachingEnd}\n              size=\"lg\"\n              rounded=\"full\"\n              onClick={() => !isReachingEnd && setSize(size + 1)}\n              variant=\"outline\"\n              borderColor={borderColor[colorMode]}\n              _focus={{ outline: \"none\" }}\n            >\n              {downChevron(isReachingEnd)}\n            </Button>\n          </div>\n        </Box>\n        <Divider\n          borderColor={borderColor[colorMode]}\n          orientation=\"vertical\"\n          my=\"6\"\n        />\n        <Aside />\n      </Grid>\n    </Layout>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}