{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/earth/WebstormProjects/arminian-perspective-blog/client/context/globalContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { createContext } from 'react';\nimport { useToggle } from \"../hooks/useToggle\";\nimport { useWindowSize } from \"../hooks/useWindowSize\";\nexport var GlobalContext = /*#__PURE__*/createContext(undefined);\nexport var GlobalProvider = function GlobalProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var width = useWindowSize().width;\n\n  var _useToggle = useToggle(),\n      isListView = _useToggle.isToggled,\n      setListView = _useToggle.setToggle,\n      switchView = _useToggle.toggle;\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      width: width,\n      isListView: isListView,\n      setListView: setListView,\n      switchView: switchView\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(GlobalProvider, \"TYh4kV+r+xaYrK8+HsVTjsV3kkg=\", false, function () {\n  return [useWindowSize, useToggle];\n});\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/Users/earth/WebstormProjects/arminian-perspective-blog/client/context/globalContext.tsx"],"names":["React","createContext","useToggle","useWindowSize","GlobalContext","undefined","GlobalProvider","children","width","isListView","isToggled","setListView","setToggle","switchView","toggle"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,QAA8C,OAA9C;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,IAAMC,aAAa,gBAAGH,aAAa,CAACI,SAAD,CAAnC;AAIP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC9C,MAAMC,KAAK,GAAGL,aAAa,GAAGK,KAA9B;;AAD8C,mBAO1CN,SAAS,EAPiC;AAAA,MAIjCO,UAJiC,cAI5CC,SAJ4C;AAAA,MAKjCC,WALiC,cAK5CC,SAL4C;AAAA,MAMpCC,UANoC,cAM5CC,MAN4C;;AAS9C,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AAAEN,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,UAAU,EAAVA,UAAT;AAAqBE,MAAAA,WAAW,EAAXA,WAArB;AAAkCE,MAAAA,UAAU,EAAVA;AAAlC,KADT;AAAA,cAGGN;AAHH;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAhBM;;GAAMD,c;UACGH,a,EAMVD,S;;;KAPOI,c","sourcesContent":["import React, {createContext, ReactNode} from 'react';\nimport { useToggle } from \"../hooks/useToggle\";\nimport { useWindowSize } from \"../hooks/useWindowSize\";\n\nexport const GlobalContext = createContext(undefined);\n\n\n\nexport const GlobalProvider = ({ children }) => {\n  const width = useWindowSize().width;\n\n  const {\n    isToggled: isListView,\n    setToggle: setListView,\n    toggle: switchView,\n  } = useToggle();\n\n  return (\n    <GlobalContext.Provider\n      value={{ width, isListView, setListView, switchView }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}