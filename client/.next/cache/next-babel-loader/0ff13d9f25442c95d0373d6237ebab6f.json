{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { useGetPosts } from \"../actions\";\nimport Spinner from \"@chakra-ui/core/dist/Spinner\";\nimport { Button } from \"@chakra-ui/core\";\nimport { PAGE_SIZE } from \"../lib/vars\";\n\nconst App = ({\n  posts\n}) => {\n  const {\n    isToggled: isListView,\n    setToggle: setListView,\n    toggle: switchView\n  } = useToggle();\n  const {\n    0: index,\n    1: setIndex\n  } = useState(0);\n  const width = useWindowWidth();\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n  const initialData = !index && posts;\n  const {\n    data: paginatedPosts,\n    error\n  } = useGetPosts(index, initialData);\n  console.log(paginatedPosts);\n  const previews = paginatedPosts && paginatedPosts.map(({\n    _id,\n    title,\n    subtitle,\n    slug,\n    mainImage,\n    publishedAt,\n    body\n  }) => __jsx(PostCard, {\n    key: _id,\n    title: title,\n    subtitle: subtitle,\n    slug: slug,\n    mainImage: mainImage,\n    publishedAt: publishedAt,\n    body: body,\n    isListView: isListView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n  const gridClass = isListView ? \"md:mx-16\" : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, !paginatedPosts && __jsx(\"div\", {\n    className: \"h-full w-full flex items-center justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Spinner, {\n    size: \"xl\",\n    thickness: \"4px\",\n    speed: \"0.65s\",\n    emptyColor: \"gray.200\",\n    color: \"gray.800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(IconsBtn, {\n    firstIcon: gridIcon,\n    secondIcon: listIcon,\n    isListView: isListView,\n    switchView: switchView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: `mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 ${gridClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, previews), __jsx(\"button\", {\n    onClick: () => setIndex((index + 1) * PAGE_SIZE),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Button\"));\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/index.js"],"names":["React","useEffect","useState","Layout","getAllPosts","useToggle","IconsBtn","gridIcon","listIcon","PostCard","useWindowWidth","useGetPosts","Spinner","Button","PAGE_SIZE","App","posts","isToggled","isListView","setToggle","setListView","toggle","switchView","index","setIndex","width","initialData","data","paginatedPosts","error","console","log","previews","map","_id","title","subtitle","slug","mainImage","publishedAt","body","gridClass","getStaticProps","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { useGetPosts } from \"../actions\";\nimport Spinner from \"@chakra-ui/core/dist/Spinner\";\nimport { Button } from \"@chakra-ui/core\";\nimport { PAGE_SIZE } from \"../lib/vars\";\n\nconst App = ({ posts }) => {\n  const {\n    isToggled: isListView,\n    setToggle: setListView,\n    toggle: switchView,\n  } = useToggle();\n\n  const [index, setIndex] = useState(0);\n\n  const width = useWindowWidth();\n\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n\n  const initialData = !index && posts;\n\n  const { data: paginatedPosts, error } = useGetPosts(index, initialData);\n  console.log(paginatedPosts);\n\n  const previews =\n    paginatedPosts &&\n    paginatedPosts.map(\n      ({ _id, title, subtitle, slug, mainImage, publishedAt, body }) => (\n        <PostCard\n          key={_id}\n          title={title}\n          subtitle={subtitle}\n          slug={slug}\n          mainImage={mainImage}\n          publishedAt={publishedAt}\n          body={body}\n          isListView={isListView}\n        />\n      )\n    );\n\n  const gridClass = isListView\n    ? \"md:mx-16\"\n    : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n\n  return (\n    <Layout>\n      {!paginatedPosts && (\n        <div className=\"h-full w-full flex items-center justify-center\">\n          <Spinner\n            size=\"xl\"\n            thickness=\"4px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.200\"\n            color=\"gray.800\"\n          />\n        </div>\n      )}\n      <div className=\"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\">\n        <IconsBtn\n          firstIcon={gridIcon}\n          secondIcon={listIcon}\n          isListView={isListView}\n          switchView={switchView}\n        />\n      </div>\n      <div\n        className={`mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 ${gridClass}`}\n      >\n        {previews}\n      </div>\n      <button onClick={() => setIndex((index + 1) * PAGE_SIZE)}>Button</button>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}