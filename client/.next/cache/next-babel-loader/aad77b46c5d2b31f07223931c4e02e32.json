{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { downChevron, gridIcon, listIcon } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { handleScroll } from \"../lib/helpers\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { useGetPosts } from \"../actions\";\nimport Button from \"@chakra-ui/core/dist/Button\";\n\nconst App = ({\n  posts\n}) => {\n  const {\n    setListView,\n    isListView,\n    switchView\n  } = useContext(GlobalContext);\n  const width = useWindowWidth();\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n  const initialData = [posts];\n\n  const increaseSize = () => setSize(size + 1);\n\n  const {\n    data: paginatedPosts,\n    size,\n    setSize\n  } = useGetPosts(initialData);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => handleScroll(increaseSize));\n    return () => window.removeEventListener(\"scroll\", () => handleScroll(increaseSize));\n  }, []);\n  if (!paginatedPosts) return \"loading\";\n  const previews = paginatedPosts && paginatedPosts.map(el => el.map(({\n    _id,\n    title,\n    subtitle,\n    slug,\n    mainImage,\n    publishedAt,\n    body\n  }) => __jsx(PostCard, {\n    key: _id,\n    title: title,\n    subtitle: subtitle,\n    slug: slug,\n    mainImage: mainImage,\n    publishedAt: publishedAt,\n    body: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n  const gridClass = isListView ? \"md:mx-16\" : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, !paginatedPosts && __jsx(\"div\", {\n    className: \"h-full w-full flex items-center justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"loading...\"), __jsx(\"div\", {\n    className: \"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(IconsBtn, {\n    firstIcon: gridIcon,\n    secondIcon: listIcon,\n    toggle: switchView,\n    isToggled: isListView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: `mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 ${gridClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, previews), __jsx(\"div\", {\n    className: \"flex  items-center justify-center my-6 lg:my-12 lg:mx-16 ip:mx-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(Button // className=\"border flex flex-col items-center justify-center border-gray-400  px-4 py-2 rounded-lg hover:border-gray-800\"\n  , {\n    onClick: () => setSize(size + 1),\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, downChevron)));\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/index.js"],"names":["React","useContext","useEffect","Layout","getAllPosts","IconsBtn","downChevron","gridIcon","listIcon","PostCard","useWindowWidth","handleScroll","GlobalContext","useGetPosts","Button","App","posts","setListView","isListView","switchView","width","initialData","increaseSize","setSize","size","data","paginatedPosts","window","addEventListener","removeEventListener","previews","map","el","_id","title","subtitle","slug","mainImage","publishedAt","body","gridClass","getStaticProps","props"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { downChevron, gridIcon, listIcon } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { handleScroll } from \"../lib/helpers\";\nimport { GlobalContext } from \"../context/global.context\";\n\nimport { useGetPosts } from \"../actions\";\nimport Button from \"@chakra-ui/core/dist/Button\";\n\nconst App = ({ posts }) => {\n  const { setListView, isListView, switchView } = useContext(GlobalContext);\n\n  const width = useWindowWidth();\n\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n\n  const initialData = [posts];\n\n  const increaseSize = () => setSize(size + 1);\n\n  const { data: paginatedPosts, size, setSize } = useGetPosts(initialData);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => handleScroll(increaseSize));\n    return () =>\n      window.removeEventListener(\"scroll\", () => handleScroll(increaseSize));\n  }, []);\n\n  if (!paginatedPosts) return \"loading\";\n\n  const previews =\n    paginatedPosts &&\n    paginatedPosts.map((el) =>\n      el.map(({ _id, title, subtitle, slug, mainImage, publishedAt, body }) => (\n        <PostCard\n          key={_id}\n          title={title}\n          subtitle={subtitle}\n          slug={slug}\n          mainImage={mainImage}\n          publishedAt={publishedAt}\n          body={body}\n        />\n      ))\n    );\n\n  const gridClass = isListView\n    ? \"md:mx-16\"\n    : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n\n  return (\n    <Layout>\n      {!paginatedPosts && (\n        <div className=\"h-full w-full flex items-center justify-center\">\n          loading...\n        </div>\n      )}\n      <div className=\"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\">\n        <IconsBtn\n          firstIcon={gridIcon}\n          secondIcon={listIcon}\n          toggle={switchView}\n          isToggled={isListView}\n        />\n      </div>\n      <div\n        className={`mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 ${gridClass}`}\n      >\n        {previews}\n      </div>\n      <div className=\"flex  items-center justify-center my-6 lg:my-12 lg:mx-16 ip:mx-64\">\n        <Button\n          // className=\"border flex flex-col items-center justify-center border-gray-400  px-4 py-2 rounded-lg hover:border-gray-800\"\n          onClick={() => setSize(size + 1)}\n          variant=\"outline\"\n        >\n          {downChevron}\n        </Button>\n      </div>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}