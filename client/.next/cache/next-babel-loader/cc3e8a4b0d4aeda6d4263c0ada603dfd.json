{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/earth/WebstormProjects/arminian-perspective-blog/client/components/layout/header/SearchInput.tsx\";\nimport React, { useState } from \"react\";\nimport Input from \"@chakra-ui/core/dist/Input\";\nimport { InputGroup, InputRightElement, useColorMode } from \"@chakra-ui/core\";\nimport { FiSearch } from \"react-icons/fi\";\nimport Box from \"@chakra-ui/core/dist/Box\";\nimport { motion } from \"framer-motion\";\nimport { bgColorReversed, borderColor, colorReversed } from \"../../../customTheme\";\nconst variants = {\n  hidden: {\n    opacity: 0,\n    x: -100\n  },\n  visible: {\n    opacity: 1,\n    x: 0\n  }\n};\n\nconst SearchInput = ({\n  switchToSearchInput\n}) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n\n  const handleChange = e => setValue(e.target.value);\n\n  const {\n    colorMode\n  } = useColorMode();\n  const MotionInput = motion.custom(Input);\n  const MotionInputGroup = motion.custom(InputGroup);\n\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      switchToSearchInput();\n    }\n  };\n\n  const handleClick = () => {\n    switchToSearchInput();\n  };\n\n  return /*#__PURE__*/_jsxDEV(MotionInputGroup, {\n    layout: true,\n    children: [/*#__PURE__*/_jsxDEV(MotionInput, {\n      layout: true,\n      initial: \"hidden\",\n      animate: \"visible\",\n      variants: variants,\n      transition: {\n        type: \"spring\",\n        stiffness: 300\n      },\n      value: value,\n      autoFocus: true,\n      onBlur: switchToSearchInput,\n      onChange: handleChange,\n      onKeyDown: handleKeyDown,\n      placeholder: \"\\u043F\\u043E\\u0438\\u0441\\u043A\",\n      borderColor: borderColor[colorMode],\n      w: {\n        base: \"250px\",\n        lg: \"350px\"\n      },\n      variant: \"outline\",\n      rounded: \"full\",\n      _focus: {\n        outline: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n      rounded: \"full\",\n      bg: bgColorReversed[colorMode],\n      cursor: \"pointer\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        onClick: handleClick,\n        as: FiSearch,\n        color: colorReversed[colorMode],\n        size: {\n          base: \"20px\",\n          lg: \"30px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n\nexport default SearchInput;","map":{"version":3,"sources":["/Users/earth/WebstormProjects/arminian-perspective-blog/client/components/layout/header/SearchInput.tsx"],"names":["React","useState","Input","InputGroup","InputRightElement","useColorMode","FiSearch","Box","motion","bgColorReversed","borderColor","colorReversed","variants","hidden","opacity","x","visible","SearchInput","switchToSearchInput","value","setValue","handleChange","e","target","colorMode","MotionInput","custom","MotionInputGroup","handleKeyDown","key","handleClick","type","stiffness","base","lg","outline"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Input from \"@chakra-ui/core/dist/Input\";\nimport { InputGroup, InputRightElement, useColorMode } from \"@chakra-ui/core\";\nimport { FiSearch } from \"react-icons/fi\";\nimport Box from \"@chakra-ui/core/dist/Box\";\nimport { motion } from \"framer-motion\";\nimport {\n  bgColorReversed,\n  borderColor,\n  colorReversed,\n} from \"../../../customTheme\";\nimport { AnimateSharedLayout } from \"framer-motion\";\n\nconst variants = {\n  hidden: { opacity: 0, x: -100 },\n  visible: {\n    opacity: 1,\n    x: 0,\n  },\n};\n\nconst SearchInput = ({ switchToSearchInput }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleChange = (e) => setValue(e.target.value);\n\n  const { colorMode } = useColorMode();\n\n  const MotionInput = motion.custom(Input);\n  const MotionInputGroup = motion.custom(InputGroup);\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      switchToSearchInput();\n    }\n  };\n\n  const handleClick = () => {\n    switchToSearchInput();\n  };\n\n  return (\n      <MotionInputGroup layout>\n        <MotionInput\n          layout\n          initial=\"hidden\"\n          animate=\"visible\"\n          variants={variants}\n          transition={{ type: \"spring\", stiffness: 300 }}\n          value={value}\n          autoFocus\n          onBlur={switchToSearchInput}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          placeholder=\"поиск\"\n          borderColor={borderColor[colorMode]}\n          w={{ base: \"250px\", lg: \"350px\" }}\n          variant=\"outline\"\n          rounded=\"full\"\n          _focus={{ outline: \"none\" }}\n        />\n        <InputRightElement\n          rounded=\"full\"\n          bg={bgColorReversed[colorMode]}\n          cursor=\"pointer\"\n          children={\n            <Box\n              onClick={handleClick}\n              as={FiSearch}\n              color={colorReversed[colorMode]}\n              size={{ base: \"20px\", lg: \"30px\" }}\n            />\n          }\n        />\n      </MotionInputGroup>\n  );\n};\n\nexport default SearchInput;\n"]},"metadata":{},"sourceType":"module"}