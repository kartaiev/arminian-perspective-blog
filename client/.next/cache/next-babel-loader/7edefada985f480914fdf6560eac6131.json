{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSWRInfinite } from \"swr\";\n\nvar fetcher = function fetcher(url) {\n  return fetch(url).then(function (res) {\n    return res.json();\n  });\n};\n\nvar getKey = function getKey(pageIndex, previousPageData) {\n  console.log(pageIndex);\n  var offset = (pageIndex + 1) * 3;\n  if (previousPageData && !previousPageData.length) return null;\n  return \"/api/posts?offset=\".concat(offset);\n};\n\nexport var useGetPosts = function useGetPosts(initialData) {\n  _s();\n\n  return useSWRInfinite(getKey, fetcher, {\n    initialData: initialData\n  });\n};\n\n_s(useGetPosts, \"o0bZTemdJWmRE1nigxQOYacCVG4=\", false, function () {\n  return [useSWRInfinite];\n});","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/actions/index.js"],"names":["useSWRInfinite","fetcher","url","fetch","then","res","json","getKey","pageIndex","previousPageData","console","log","offset","length","useGetPosts","initialData"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,KAA/B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,SAASC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GAAhB,CAAT;AAAA,CAAhB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,SAAD,EAAYC,gBAAZ,EAAiC;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,MAAMI,MAAM,GAAG,CAACJ,SAAS,GAAG,CAAb,IAAkB,CAAjC;AACA,MAAIC,gBAAgB,IAAI,CAACA,gBAAgB,CAACI,MAA1C,EAAkD,OAAO,IAAP;AAClD,qCAA4BD,MAA5B;AACD,CALD;;AAOA,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,WAAD;AAAA;;AAAA,SACzBf,cAAc,CAACO,MAAD,EAASN,OAAT,EAAkB;AAAEc,IAAAA,WAAW,EAAXA;AAAF,GAAlB,CADW;AAAA,CAApB;;GAAMD,W;UACXd,c","sourcesContent":["import { useSWRInfinite } from \"swr\";\n\nconst fetcher = (url) => fetch(url).then((res) => res.json());\n\nconst getKey = (pageIndex, previousPageData) => {\n  console.log(pageIndex);\n  const offset = (pageIndex + 1) * 3;\n  if (previousPageData && !previousPageData.length) return null;\n  return `/api/posts?offset=${offset}`;\n};\n\nexport const useGetPosts = (initialData) =>\n  useSWRInfinite(getKey, fetcher, { initialData });\n"]},"metadata":{},"sourceType":"module"}