{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\blog\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport IconsBtn from \"../components/shared/IconsBtn\";\nimport { downChevron, gridIcon, listIcon } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { handleScroll } from \"../lib/helpers\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { FiList, FiGrid } from \"react-icons/fi\";\nimport { useGetPosts } from \"../actions\";\nimport Button from \"@chakra-ui/core/dist/Button\";\nimport { Skeleton } from \"@chakra-ui/core\";\nimport { PAGE_SIZE } from \"../lib/vars\";\n\nvar App = function App(_ref) {\n  _s();\n\n  var _paginatedPosts$, _paginatedPosts;\n\n  var posts = _ref.posts;\n\n  var _useContext = useContext(GlobalContext),\n      setListView = _useContext.setListView,\n      isListView = _useContext.isListView,\n      switchView = _useContext.switchView;\n\n  var width = useWindowWidth();\n  useEffect(function () {\n    width <= 768 && setListView(false);\n  }, [width]);\n  var initialData = posts && [posts];\n\n  var _useGetPosts = useGetPosts(initialData),\n      paginatedPosts = _useGetPosts.data,\n      size = _useGetPosts.size,\n      setSize = _useGetPosts.setSize;\n\n  var isEmpty = (paginatedPosts === null || paginatedPosts === void 0 ? void 0 : (_paginatedPosts$ = paginatedPosts[0]) === null || _paginatedPosts$ === void 0 ? void 0 : _paginatedPosts$.length) === 0;\n  var isReachingEnd = isEmpty || paginatedPosts && ((_paginatedPosts = paginatedPosts[paginatedPosts.length - 1]) === null || _paginatedPosts === void 0 ? void 0 : _paginatedPosts.length) < PAGE_SIZE; // const increaseSize = () => !isReachingEnd && setSize((prev) => prev + 1);\n  //\n  // useEffect(() => {\n  //   window.addEventListener(\"scroll\", () => handleScroll(increaseSize));\n  //   return () =>\n  //     window.removeEventListener(\"scroll\", () => handleScroll(increaseSize));\n  // }, []);\n\n  if (!paginatedPosts) return \"loading\";\n  var previews = paginatedPosts && paginatedPosts.map(function (el) {\n    return el.map(function (_ref2) {\n      var _id = _ref2._id,\n          title = _ref2.title,\n          subtitle = _ref2.subtitle,\n          slug = _ref2.slug,\n          mainImage = _ref2.mainImage,\n          publishedAt = _ref2.publishedAt,\n          body = _ref2.body;\n      return __jsx(PostCard, {\n        key: _id,\n        title: title,\n        subtitle: subtitle,\n        slug: slug,\n        mainImage: mainImage,\n        publishedAt: publishedAt,\n        body: body,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      });\n    });\n  });\n  var previewClass = isListView ? \"md:mx-16 ip:mx-64\" : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"view-button-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(IconsBtn, {\n    firstIcon: FiGrid,\n    secondIcon: FiList,\n    toggle: switchView,\n    isToggled: isListView,\n    className: \"ease\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), __jsx(Skeleton, {\n    isLoaded: paginatedPosts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"preview-container \".concat(previewClass),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, previews)), __jsx(\"div\", {\n    className: \"preview-button-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    disabled: isReachingEnd,\n    size: \"lg\",\n    rounded: \"full\",\n    onClick: function onClick() {\n      return !isReachingEnd && setSize(size + 1);\n    },\n    variant: \"outline\",\n    _focus: {\n      outline: \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, downChevron(isReachingEnd))));\n};\n\n_s(App, \"Tg+WtdywMcL9biuNROYPH8Ljwic=\", false, function () {\n  return [useWindowWidth, useGetPosts];\n});\n\n_c = App;\nexport var __N_SSG = true;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/blog/arminian-perspective-blog/client/pages/index.js"],"names":["React","useContext","useEffect","Layout","IconsBtn","downChevron","gridIcon","listIcon","PostCard","useWindowWidth","handleScroll","GlobalContext","FiList","FiGrid","useGetPosts","Button","Skeleton","PAGE_SIZE","App","posts","setListView","isListView","switchView","width","initialData","paginatedPosts","data","size","setSize","isEmpty","length","isReachingEnd","previews","map","el","_id","title","subtitle","slug","mainImage","publishedAt","body","previewClass","outline"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport IconsBtn from \"../components/shared/IconsBtn\";\nimport { downChevron, gridIcon, listIcon } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { handleScroll } from \"../lib/helpers\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { FiList, FiGrid } from \"react-icons/fi\";\nimport { useGetPosts } from \"../actions\";\nimport Button from \"@chakra-ui/core/dist/Button\";\nimport { Skeleton } from \"@chakra-ui/core\";\nimport { PAGE_SIZE } from \"../lib/vars\";\n\nconst App = ({ posts }) => {\n  const { setListView, isListView, switchView } = useContext(GlobalContext);\n\n  const width = useWindowWidth();\n\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n\n  const initialData = posts && [posts];\n\n  const { data: paginatedPosts, size, setSize } = useGetPosts(initialData);\n\n  const isEmpty = paginatedPosts?.[0]?.length === 0;\n  const isReachingEnd =\n    isEmpty ||\n    (paginatedPosts &&\n      paginatedPosts[paginatedPosts.length - 1]?.length < PAGE_SIZE);\n\n  // const increaseSize = () => !isReachingEnd && setSize((prev) => prev + 1);\n  //\n  // useEffect(() => {\n  //   window.addEventListener(\"scroll\", () => handleScroll(increaseSize));\n  //   return () =>\n  //     window.removeEventListener(\"scroll\", () => handleScroll(increaseSize));\n  // }, []);\n\n  if (!paginatedPosts) return \"loading\";\n\n  const previews =\n    paginatedPosts &&\n    paginatedPosts.map((el) =>\n      el.map(({ _id, title, subtitle, slug, mainImage, publishedAt, body }) => (\n        <PostCard\n          key={_id}\n          title={title}\n          subtitle={subtitle}\n          slug={slug}\n          mainImage={mainImage}\n          publishedAt={publishedAt}\n          body={body}\n        />\n      ))\n    );\n\n  const previewClass = isListView\n    ? \"md:mx-16 ip:mx-64\"\n    : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n\n  return (\n    <Layout>\n      <div className=\"view-button-container\">\n        <IconsBtn\n          firstIcon={FiGrid}\n          secondIcon={FiList}\n          toggle={switchView}\n          isToggled={isListView}\n          className=\"ease\"\n        />\n      </div>\n      <Skeleton isLoaded={paginatedPosts}>\n        <div className={`preview-container ${previewClass}`}>{previews}</div>\n      </Skeleton>\n      <div className=\"preview-button-container\">\n        <Button\n          disabled={isReachingEnd}\n          size=\"lg\"\n          rounded=\"full\"\n          onClick={() => !isReachingEnd && setSize(size + 1)}\n          variant=\"outline\"\n          _focus={{ outline: \"none\" }}\n        >\n          {downChevron(isReachingEnd)}\n        </Button>\n      </div>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}