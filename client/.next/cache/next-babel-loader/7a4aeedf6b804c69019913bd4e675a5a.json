{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"post\\\" && slug.current == $slug][0]{\\n  title,\\n  \\\"name\\\": author->name,\\n  \\\"categories\\\": categories[]->title,\\n  mainImage,\\n  body\\n}\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      *[_type == \\\"post\\\"]|order(publishedAt desc)\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport client from \"./client\";\nimport groq from \"groq\"; // const fields = `\n//   title,\n//   subtitle,\n//   slug: slug.current\n//   `;\n\nexport var getAllPosts = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return client.fetch(groq(_templateObject()));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAllPosts() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar query = groq(_templateObject2());\nexport var getSinglePost = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(slug) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return client.fetch(query, {\n              slug: slug\n            });\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getSinglePost(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/lib/api.js"],"names":["client","groq","getAllPosts","fetch","query","getSinglePost","slug"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,WAAW;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZF,MAAM,CAACG,KAAP,CAAaF,IAAb,oBADY;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXC,WAAW;AAAA;AAAA;AAAA,GAAjB;AAMP,IAAME,KAAK,GAAGH,IAAH,oBAAX;AAQA,OAAO,IAAMI,aAAa;AAAA,uEAAG,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACdN,MAAM,CAACG,KAAP,CAAaC,KAAb,EAAoB;AAAEE,cAAAA,IAAI,EAAJA;AAAF,aAApB,CADc;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbD,aAAa;AAAA;AAAA;AAAA,GAAnB","sourcesContent":["import client from \"./client\";\nimport groq from \"groq\";\n\n// const fields = `\n//   title,\n//   subtitle,\n//   slug: slug.current\n//   `;\n\nexport const getAllPosts = async () => {\n  return await client.fetch(groq`\n      *[_type == \"post\"]|order(publishedAt desc)\n    `);\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  mainImage,\n  body\n}`;\n\nexport const getSinglePost = async (slug) => {\n  return await client.fetch(query, { slug });\n};\n"]},"metadata":{},"sourceType":"module"}