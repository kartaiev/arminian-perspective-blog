{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { downChevron, gridIcon, listIcon } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { handleScroll } from \"../lib/helpers\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { FetchContext } from \"../context/fetch.context\";\n\nconst App = ({\n  posts\n}) => {\n  const {\n    setListView,\n    isListView,\n    switchView\n  } = useContext(GlobalContext);\n  const {\n    setInitialData,\n    paginatedPosts,\n    size,\n    setSize,\n    increaseSize\n  } = useContext(FetchContext);\n  const width = useWindowWidth();\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n  useEffect(() => {\n    setInitialData([posts]);\n  });\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => handleScroll(increaseSize));\n    return () => window.removeEventListener(\"scroll\", () => handleScroll(increaseSize));\n  }, []);\n  if (!paginatedPosts) return \"loading\";\n  const previews = paginatedPosts && paginatedPosts.map(el => el.map(({\n    _id,\n    title,\n    subtitle,\n    slug,\n    mainImage,\n    publishedAt,\n    body\n  }) => __jsx(PostCard, {\n    key: _id,\n    title: title,\n    subtitle: subtitle,\n    slug: slug,\n    mainImage: mainImage,\n    publishedAt: publishedAt,\n    body: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n  const gridClass = isListView ? \"md:mx-16\" : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, !paginatedPosts && __jsx(\"div\", {\n    className: \"h-full w-full flex items-center justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"loading...\"), __jsx(\"div\", {\n    className: \"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(IconsBtn, {\n    firstIcon: gridIcon,\n    secondIcon: listIcon,\n    toggle: switchView,\n    isToggled: isListView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: `mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 ${gridClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, previews), __jsx(\"div\", {\n    className: \"flex  items-center justify-center my-6 lg:my-12 lg:mx-16 ip:mx-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"border flex flex-col items-center justify-center border-gray-400  px-4 py-2 rounded-lg hover:border-gray-800\",\n    onClick: () => setSize(size + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, downChevron)));\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/index.js"],"names":["React","useContext","useEffect","Layout","getAllPosts","IconsBtn","downChevron","gridIcon","listIcon","PostCard","useWindowWidth","handleScroll","GlobalContext","FetchContext","App","posts","setListView","isListView","switchView","setInitialData","paginatedPosts","size","setSize","increaseSize","width","window","addEventListener","removeEventListener","previews","map","el","_id","title","subtitle","slug","mainImage","publishedAt","body","gridClass","getStaticProps","props"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { downChevron, gridIcon, listIcon } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { handleScroll } from \"../lib/helpers\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { FetchContext } from \"../context/fetch.context\";\n\nconst App = ({ posts }) => {\n  const { setListView, isListView, switchView } = useContext(GlobalContext);\n  const {\n    setInitialData,\n    paginatedPosts,\n    size,\n    setSize,\n    increaseSize,\n  } = useContext(FetchContext);\n\n  const width = useWindowWidth();\n\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n\n  useEffect(() => {\n    setInitialData([posts]);\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => handleScroll(increaseSize));\n    return () =>\n      window.removeEventListener(\"scroll\", () => handleScroll(increaseSize));\n  }, []);\n\n  if (!paginatedPosts) return \"loading\";\n\n  const previews =\n    paginatedPosts &&\n    paginatedPosts.map((el) =>\n      el.map(({ _id, title, subtitle, slug, mainImage, publishedAt, body }) => (\n        <PostCard\n          key={_id}\n          title={title}\n          subtitle={subtitle}\n          slug={slug}\n          mainImage={mainImage}\n          publishedAt={publishedAt}\n          body={body}\n        />\n      ))\n    );\n\n  const gridClass = isListView\n    ? \"md:mx-16\"\n    : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n\n  return (\n    <Layout>\n      {!paginatedPosts && (\n        <div className=\"h-full w-full flex items-center justify-center\">\n          loading...\n        </div>\n      )}\n      <div className=\"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\">\n        <IconsBtn\n          firstIcon={gridIcon}\n          secondIcon={listIcon}\n          toggle={switchView}\n          isToggled={isListView}\n        />\n      </div>\n      <div\n        className={`mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 ${gridClass}`}\n      >\n        {previews}\n      </div>\n      <div className=\"flex  items-center justify-center my-6 lg:my-12 lg:mx-16 ip:mx-64\">\n        <button\n          className=\"border flex flex-col items-center justify-center border-gray-400  px-4 py-2 rounded-lg hover:border-gray-800\"\n          onClick={() => setSize(size + 1)}\n        >\n          {downChevron}\n        </button>\n      </div>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}