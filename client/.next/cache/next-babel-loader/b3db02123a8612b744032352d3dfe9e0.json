{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport PostCard from \"../components/PostCard\";\nimport { Tooltip } from \"@chakra-ui/core\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport { motion } from \"framer-motion\";\n\nvar App = function App(_ref) {\n  _s();\n\n  var _ref$posts = _ref.posts,\n      posts = _ref$posts === void 0 ? [] : _ref$posts;\n\n  var _useToggle = useToggle(),\n      isToggled = _useToggle.isToggled,\n      toggle = _useToggle.toggle;\n\n  var previews = posts.map(function (_ref2) {\n    var _id = _ref2._id,\n        _ref2$title = _ref2.title,\n        title = _ref2$title === void 0 ? \"\" : _ref2$title,\n        _ref2$subtitle = _ref2.subtitle,\n        subtitle = _ref2$subtitle === void 0 ? \"\" : _ref2$subtitle,\n        _ref2$slug = _ref2.slug,\n        slug = _ref2$slug === void 0 ? \"\" : _ref2$slug,\n        mainImage = _ref2.mainImage,\n        _ref2$publishedAt = _ref2.publishedAt,\n        publishedAt = _ref2$publishedAt === void 0 ? \"\" : _ref2$publishedAt;\n    return __jsx(PostCard, {\n      key: _id,\n      title: title,\n      subtitle: subtitle,\n      slug: slug,\n      mainImage: mainImage,\n      publishedAt: publishedAt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    });\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"hidden h-10 lg:px-16 xl:px-48 mt-6 lg:flex justify-start items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(motion.button, {\n    whileHover: {\n      scale: 1.2\n    },\n    onClick: toggle,\n    className: \"focus:outline-none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, isToggled ? __jsx(Tooltip, {\n    hasArrow: true,\n    bg: \"gray.600\",\n    label: \"\\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0437\\u0438\\u0442\\u044C \\u0441\\u0435\\u0442\\u043A\\u043E\\u0439\",\n    placement: \"top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"svg\", {\n    className: \"w-8 h-8\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }))) : __jsx(Tooltip, {\n    hasArrow: true,\n    label: \"\\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0437\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043A\\u043E\\u043C\",\n    placement: \"top\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, __jsx(\"svg\", {\n    className: \"w-8 h-8\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, __jsx(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M4 6h16M4 10h16M4 14h16M4 18h16\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }))))), __jsx(\"div\", {\n    className: \"mb-6 grid grid-cols-1 gap-6 lg:grid-cols-2 lg:mt-2 lg:mx-16 xl:mx-48 xl:grid-cols-3 xl:gap-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, previews));\n};\n\n_s(App, \"YnTxiDSHocyVV9znCwOPuyEY9zA=\", false, function () {\n  return [useToggle];\n});\n\n_c = App;\nexport var __N_SSG = true;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/index.js"],"names":["React","Layout","PostCard","Tooltip","useToggle","motion","App","posts","isToggled","toggle","previews","map","_id","title","subtitle","slug","mainImage","publishedAt","scale"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport PostCard from \"../components/PostCard\";\nimport { Tooltip } from \"@chakra-ui/core\";\nimport { getAllPosts } from \"../lib/api\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport { motion } from \"framer-motion\";\n\nconst App = ({ posts = [] }) => {\n  const { isToggled, toggle } = useToggle();\n\n  const previews = posts.map(\n    ({\n      _id,\n      title = \"\",\n      subtitle = \"\",\n      slug = \"\",\n      mainImage,\n      publishedAt = \"\",\n    }) => (\n      <PostCard\n        key={_id}\n        title={title}\n        subtitle={subtitle}\n        slug={slug}\n        mainImage={mainImage}\n        publishedAt={publishedAt}\n      />\n    )\n  );\n\n  return (\n    <Layout>\n      <div className=\"hidden h-10 lg:px-16 xl:px-48 mt-6 lg:flex justify-start items-center\">\n        <motion.button\n          whileHover={{ scale: 1.2 }}\n          onClick={toggle}\n          className=\"focus:outline-none\"\n        >\n          {isToggled ? (\n            <Tooltip\n              hasArrow\n              bg=\"gray.600\"\n              label=\"отобразить сеткой\"\n              placement=\"top\"\n            >\n              <svg\n                className=\"w-8 h-8\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"\n                />\n              </svg>\n            </Tooltip>\n          ) : (\n            <Tooltip hasArrow label=\"отобразить списком\" placement=\"top\">\n              <svg\n                className=\"w-8 h-8\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"\n                />\n              </svg>\n            </Tooltip>\n          )}\n        </motion.button>\n      </div>\n      <div className=\"mb-6 grid grid-cols-1 gap-6 lg:grid-cols-2 lg:mt-2 lg:mx-16 xl:mx-48 xl:grid-cols-3 xl:gap-12\">\n        {previews}\n      </div>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts();\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}