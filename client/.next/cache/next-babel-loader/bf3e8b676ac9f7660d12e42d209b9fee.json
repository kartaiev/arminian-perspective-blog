{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/earth/WebstormProjects/arminian-perspective-blog/client/components/posts-preview/Previews.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport PostCard from './PostCard';\nimport { useGetPosts, useGetPostsByCategory } from '../../actions';\nimport { PAGE_SIZE } from '../../lib/vars';\nimport IconsBtn from '../shared/IconsBtn';\nimport { BsGrid } from 'react-icons/bs';\nimport { FiList } from 'react-icons/fi';\nimport { Box, Button, Skeleton, useColorMode } from '@chakra-ui/core';\nimport { borderColor, color } from '../../customTheme';\nimport { downChevron } from '../../lib/icons';\nimport { GlobalContext } from '../../context/globalContext';\n\nvar Previews = function Previews(_ref) {\n  _s();\n\n  var _paginatedPosts$, _paginatedPosts;\n\n  var posts = _ref.posts;\n\n  var _useContext = useContext(GlobalContext),\n      isListView = _useContext.isListView,\n      switchView = _useContext.switchView;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var initialData = posts && [posts];\n\n  var _useGetPosts = useGetPosts(initialData),\n      paginatedPosts = _useGetPosts.data,\n      size = _useGetPosts.size,\n      setSize = _useGetPosts.setSize;\n\n  var _useGetPostsByCategor = useGetPostsByCategory('faith'),\n      data = _useGetPostsByCategor.data;\n\n  if (!paginatedPosts) return 'loading';\n  var isEmpty = (paginatedPosts === null || paginatedPosts === void 0 ? void 0 : (_paginatedPosts$ = paginatedPosts[0]) === null || _paginatedPosts$ === void 0 ? void 0 : _paginatedPosts$.length) === 0;\n  var isReachingEnd = isEmpty || ((_paginatedPosts = paginatedPosts[paginatedPosts.length - 1]) === null || _paginatedPosts === void 0 ? void 0 : _paginatedPosts.length) < PAGE_SIZE;\n  var previews = paginatedPosts.map(function (el) {\n    return el.map(function (_ref2) {\n      var _id = _ref2._id,\n          title = _ref2.title,\n          subtitle = _ref2.subtitle,\n          slug = _ref2.slug,\n          mainImage = _ref2.mainImage,\n          publishedAt = _ref2.publishedAt,\n          name = _ref2.name;\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        title: title,\n        subtitle: subtitle,\n        slug: slug,\n        mainImage: mainImage,\n        publishedAt: publishedAt,\n        name: name\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, _this);\n    });\n  });\n  var previewClass = isListView ? 'md:mx-16 ip:ml-48' : 'lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12'; // @ts-ignore\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-button-container\",\n      children: /*#__PURE__*/_jsxDEV(IconsBtn, {\n        whileHover: {\n          scale: 1.2\n        },\n        firstIcon: BsGrid,\n        secondIcon: FiList,\n        toggle: switchView,\n        isToggled: isListView,\n        className: \"ease\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Skeleton, {\n      isLoaded: paginatedPosts,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        color: color[colorMode],\n        className: \"preview-container \".concat(previewClass),\n        children: previews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-button-container\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        isDisabled: isReachingEnd,\n        size: \"lg\",\n        rounded: \"full\",\n        onClick: function onClick() {\n          return !isReachingEnd && setSize(size + 1);\n        },\n        variant: \"outline\",\n        borderColor: borderColor[colorMode],\n        _focus: {\n          outline: 'none'\n        },\n        children: downChevron(isReachingEnd)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Previews, \"a4eZmDibzwkLsFsVN/MgOq6rL+g=\", false, function () {\n  return [useColorMode, useGetPosts, useGetPostsByCategory];\n});\n\n_c = Previews;\nexport default Previews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Previews\");","map":{"version":3,"sources":["/Users/earth/WebstormProjects/arminian-perspective-blog/client/components/posts-preview/Previews.tsx"],"names":["React","useContext","PostCard","useGetPosts","useGetPostsByCategory","PAGE_SIZE","IconsBtn","BsGrid","FiList","Box","Button","Skeleton","useColorMode","borderColor","color","downChevron","GlobalContext","Previews","posts","isListView","switchView","colorMode","initialData","paginatedPosts","data","size","setSize","isEmpty","length","isReachingEnd","previews","map","el","_id","title","subtitle","slug","mainImage","publishedAt","name","previewClass","scale","outline"],"mappings":"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","sourcesContent":["import React, {ReactNode, useContext} from 'react';\nimport PostCard from './PostCard';\nimport {useGetPosts, useGetPostsByCategory} from '../../actions';\nimport {PAGE_SIZE} from '../../lib/vars';\nimport IconsBtn from '../shared/IconsBtn';\nimport {BsGrid} from 'react-icons/bs';\nimport {FiList} from 'react-icons/fi';\nimport {Box, Button, Skeleton, useColorMode} from '@chakra-ui/core';\nimport {borderColor, color} from '../../customTheme';\nimport {downChevron} from '../../lib/icons';\nimport {GlobalContext} from '../../context/globalContext';\nimport {IPost} from '../../interfaces/IPost';\n\nconst Previews = ({posts}: { posts: IPost[] }): ReactNode => {\n    const {isListView, switchView} = useContext(GlobalContext);\n\n    const {colorMode} = useColorMode();\n\n    const initialData = posts && [posts];\n\n    const {data: paginatedPosts, size, setSize} = useGetPosts(initialData);\n    const {data} = useGetPostsByCategory('faith');\n\n    if (!paginatedPosts) return 'loading';\n\n    const isEmpty = paginatedPosts?.[0]?.length === 0;\n    const isReachingEnd =\n        isEmpty || paginatedPosts[paginatedPosts.length - 1]?.length < PAGE_SIZE;\n\n    const previews = paginatedPosts.map((el: IPost[]) =>\n        el.map(({_id, title, subtitle, slug, mainImage, publishedAt, name}) => (\n            <PostCard\n                key={_id}\n                title={title}\n                subtitle={subtitle}\n                slug={slug}\n                mainImage={mainImage}\n                publishedAt={publishedAt}\n                name={name}\n            />\n        ))\n    );\n\n    const previewClass = isListView\n        ? 'md:mx-16 ip:ml-48'\n        : 'lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12';\n\n    // @ts-ignore\n    return (\n        <>\n            <div className=\"view-button-container\">\n                <IconsBtn\n                    whileHover={{scale: 1.2}}\n                    firstIcon={BsGrid}\n                    secondIcon={FiList}\n                    toggle={switchView}\n                    isToggled={isListView}\n                    className=\"ease\"\n                />\n            </div>\n            <Skeleton isLoaded={paginatedPosts}>\n                <Box\n                    color={color[colorMode]}\n                    className={`preview-container ${previewClass}`}\n                >\n                    {previews}\n                </Box>\n            </Skeleton>\n            <div className=\"preview-button-container\">\n                <Button\n                    isDisabled={isReachingEnd}\n                    size=\"lg\"\n                    rounded=\"full\"\n                    onClick={() => !isReachingEnd && setSize(size + 1)}\n                    variant=\"outline\"\n                    borderColor={borderColor[colorMode]}\n                    _focus={{outline: 'none'}}\n                >\n                    {downChevron(isReachingEnd)}\n                </Button>\n            </div>\n        </>\n    );\n};\n\nexport default Previews;\n"]},"metadata":{},"sourceType":"module"}