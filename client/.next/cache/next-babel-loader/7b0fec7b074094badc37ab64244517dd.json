{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon, downChevron } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { useGetPosts } from \"../actions\";\nimport { handleScroll } from \"../lib/helpers\";\n\nvar App = function App(_ref) {\n  _s();\n\n  var posts = _ref.posts;\n\n  var _useToggle = useToggle(),\n      isListView = _useToggle.isToggled,\n      setListView = _useToggle.setToggle,\n      switchView = _useToggle.toggle;\n\n  var width = useWindowWidth();\n  useEffect(function () {\n    width <= 768 && setListView(false);\n  }, [width]);\n  var initialData = [posts];\n\n  var _useGetPosts = useGetPosts(initialData),\n      paginatedPosts = _useGetPosts.data,\n      size = _useGetPosts.size,\n      setSize = _useGetPosts.setSize;\n\n  var handleScroll = function handleScroll() {\n    var windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\n    var body = document.body;\n    var html = document.documentElement;\n    var docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n    var windowBottom = windowHeight + window.pageYOffset;\n\n    if (windowBottom >= docHeight) {\n      console.log(\"bottom\");\n    } else {\n      console.log(\"top\");\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"scroll\", handleScroll);\n    return function () {\n      return window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [window.scrollY]);\n  if (!paginatedPosts) return \"loading\";\n  var previews = paginatedPosts && paginatedPosts.map(function (el) {\n    return el.map(function (_ref2) {\n      var _id = _ref2._id,\n          title = _ref2.title,\n          subtitle = _ref2.subtitle,\n          slug = _ref2.slug,\n          mainImage = _ref2.mainImage,\n          publishedAt = _ref2.publishedAt,\n          body = _ref2.body;\n      return __jsx(PostCard, {\n        key: _id,\n        title: title,\n        subtitle: subtitle,\n        slug: slug,\n        mainImage: mainImage,\n        publishedAt: publishedAt,\n        body: body,\n        isListView: isListView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      });\n    });\n  });\n  var gridClass = isListView ? \"md:mx-16\" : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, !paginatedPosts && __jsx(\"div\", {\n    className: \"h-full w-full flex items-center justify-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"loading...\"), __jsx(\"div\", {\n    className: \"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(IconsBtn, {\n    firstIcon: gridIcon,\n    secondIcon: listIcon,\n    isListView: isListView,\n    switchView: switchView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 \".concat(gridClass),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, previews), __jsx(\"div\", {\n    className: \"flex  items-center justify-center my-6 lg:my-12 lg:mx-16 ip:mx-64\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"border flex flex-col items-center justify-center border-gray-400  px-4 py-2 rounded-lg hover:border-gray-800\",\n    onClick: function onClick() {\n      return setSize(size + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, downChevron)));\n};\n\n_s(App, \"aHGyWNl5VzSVhGMe0mu9QI1W5lI=\", false, function () {\n  return [useToggle, useWindowWidth, useGetPosts];\n});\n\n_c = App;\nexport var __N_SSG = true;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/index.js"],"names":["React","useEffect","useState","Layout","useToggle","IconsBtn","gridIcon","listIcon","downChevron","PostCard","useWindowWidth","useGetPosts","handleScroll","App","posts","isListView","isToggled","setListView","setToggle","switchView","toggle","width","initialData","paginatedPosts","data","size","setSize","windowHeight","window","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","windowBottom","pageYOffset","console","log","addEventListener","removeEventListener","scrollY","previews","map","el","_id","title","subtitle","slug","mainImage","publishedAt","gridClass"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon, downChevron } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { useGetPosts } from \"../actions\";\nimport { handleScroll } from \"../lib/helpers\";\n\nconst App = ({ posts }) => {\n  const {\n    isToggled: isListView,\n    setToggle: setListView,\n    toggle: switchView,\n  } = useToggle();\n\n  const width = useWindowWidth();\n\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n\n  const initialData = [posts];\n\n  const { data: paginatedPosts, size, setSize } = useGetPosts(initialData);\n\n  const handleScroll = () => {\n    const windowHeight =\n      \"innerHeight\" in window\n        ? window.innerHeight\n        : document.documentElement.offsetHeight;\n    const body = document.body;\n    const html = document.documentElement;\n    const docHeight = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n    const windowBottom = windowHeight + window.pageYOffset;\n    if (windowBottom >= docHeight) {\n      console.log(\"bottom\");\n    } else {\n      console.log(\"top\");\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [window.scrollY]);\n\n  if (!paginatedPosts) return \"loading\";\n\n  const previews =\n    paginatedPosts &&\n    paginatedPosts.map((el) =>\n      el.map(({ _id, title, subtitle, slug, mainImage, publishedAt, body }) => (\n        <PostCard\n          key={_id}\n          title={title}\n          subtitle={subtitle}\n          slug={slug}\n          mainImage={mainImage}\n          publishedAt={publishedAt}\n          body={body}\n          isListView={isListView}\n        />\n      ))\n    );\n\n  const gridClass = isListView\n    ? \"md:mx-16\"\n    : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n\n  return (\n    <Layout>\n      {!paginatedPosts && (\n        <div className=\"h-full w-full flex items-center justify-center\">\n          loading...\n        </div>\n      )}\n      <div className=\"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\">\n        <IconsBtn\n          firstIcon={gridIcon}\n          secondIcon={listIcon}\n          isListView={isListView}\n          switchView={switchView}\n        />\n      </div>\n      <div\n        className={`mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 ${gridClass}`}\n      >\n        {previews}\n      </div>\n      <div className=\"flex  items-center justify-center my-6 lg:my-12 lg:mx-16 ip:mx-64\">\n        <button\n          className=\"border flex flex-col items-center justify-center border-gray-400  px-4 py-2 rounded-lg hover:border-gray-800\"\n          onClick={() => setSize(size + 1)}\n        >\n          {downChevron}\n        </button>\n      </div>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}