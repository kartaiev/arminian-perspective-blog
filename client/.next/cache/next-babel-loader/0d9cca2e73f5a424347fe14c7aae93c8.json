{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport client from \"../lib/client\";\nimport groq from \"groq\";\nimport PostCard from \"../components/PostCard\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { getAllPosts } from \"../lib/api\";\n\nvar App = function App(_ref) {\n  _s();\n\n  var _ref$posts = _ref.posts,\n      posts = _ref$posts === void 0 ? [] : _ref$posts;\n\n  var _useContext = useContext(GlobalContext),\n      isOpened = _useContext.isOpened;\n\n  var previews = posts.map(function (_ref2) {\n    var _id = _ref2._id,\n        _ref2$title = _ref2.title,\n        title = _ref2$title === void 0 ? \"\" : _ref2$title,\n        _ref2$slug = _ref2.slug,\n        slug = _ref2$slug === void 0 ? \"\" : _ref2$slug,\n        _ref2$_updatedAt = _ref2._updatedAt,\n        _updatedAt = _ref2$_updatedAt === void 0 ? \"\" : _ref2$_updatedAt,\n        mainImage = _ref2.mainImage;\n\n    return __jsx(PostCard, {\n      key: _id,\n      title: title,\n      slug: slug,\n      updatedAt: _updatedAt,\n      mainImage: mainImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    });\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"mb-6 grid grid-cols-1 gap-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, previews));\n};\n\n_s(App, \"hR2iLWTCIyZYw1FEhOjLXKoRyLo=\");\n\n_c = App;\nApp.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            posts: getAllPosts()\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/index.js"],"names":["React","useContext","Layout","client","groq","PostCard","GlobalContext","getAllPosts","App","posts","isOpened","previews","map","_id","title","slug","_updatedAt","mainImage","getInitialProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAoB;AAAA;;AAAA,wBAAjBC,KAAiB;AAAA,MAAjBA,KAAiB,2BAAT,EAAS;;AAAA,oBACTR,UAAU,CAACK,aAAD,CADD;AAAA,MACtBI,QADsB,eACtBA,QADsB;;AAG9B,MAAMC,QAAQ,GAAGF,KAAK,CAACG,GAAN,CACf;AAAA,QAAGC,GAAH,SAAGA,GAAH;AAAA,4BAAQC,KAAR;AAAA,QAAQA,KAAR,4BAAgB,EAAhB;AAAA,2BAAoBC,IAApB;AAAA,QAAoBA,IAApB,2BAA2B,EAA3B;AAAA,iCAA+BC,UAA/B;AAAA,QAA+BA,UAA/B,iCAA4C,EAA5C;AAAA,QAAgDC,SAAhD,SAAgDA,SAAhD;;AAAA,WACE,MAAC,QAAD;AACE,MAAA,GAAG,EAAEJ,GADP;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,IAAI,EAAEC,IAHR;AAIE,MAAA,SAAS,EAAEC,UAJb;AAKE,MAAA,SAAS,EAAEC,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAAA,GADe,CAAjB;AAYA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CN,QAA9C,CADF,CADF;AAKD,CApBD;;GAAMH,G;;KAAAA,G;AAsBNA,GAAG,CAACU,eAAJ,yEAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAa;AACjCT,YAAAA,KAAK,EAAEF,WAAW;AADe,WAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAIA,eAAeC,GAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport client from \"../lib/client\";\nimport groq from \"groq\";\nimport PostCard from \"../components/PostCard\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { getAllPosts } from \"../lib/api\";\n\nconst App = ({ posts = [] }) => {\n  const { isOpened } = useContext(GlobalContext);\n\n  const previews = posts.map(\n    ({ _id, title = \"\", slug = \"\", _updatedAt = \"\", mainImage }) => (\n      <PostCard\n        key={_id}\n        title={title}\n        slug={slug}\n        updatedAt={_updatedAt}\n        mainImage={mainImage}\n      />\n    )\n  );\n\n  return (\n    <Layout>\n      <div className=\"mb-6 grid grid-cols-1 gap-6\">{previews}</div>\n    </Layout>\n  );\n};\n\nApp.getInitialProps = async () => ({\n  posts: getAllPosts(),\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}