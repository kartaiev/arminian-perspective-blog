{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon, rightArrow, leftArrow } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { dataDDD, fetcher, getKey, useGetPosts } from \"../actions\";\nimport { Button } from \"semantic-ui-react\";\nimport { PAGE_SIZE } from \"../lib/vars\";\nimport { useSWRInfinite } from \"swr\";\nimport previews from \"../components/posts-preview/previews\";\n\nconst App = ({\n  posts\n}) => {\n  const {\n    isToggled: isListView,\n    setToggle: setListView,\n    toggle: switchView\n  } = useToggle();\n  const {\n    0: index,\n    1: setIndex\n  } = useState(0);\n  const {\n    0: paginatedPosts,\n    1: setPaginatedPosts\n  } = useState([]);\n  const width = useWindowWidth();\n  useEffect(() => {\n    const paginatedPosts = previews();\n    setPaginatedPosts(paginatedPosts);\n  });\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n  const initialData = !index && posts;\n  const gridClass = isListView ? \"md:mx-16\" : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, !paginatedPosts && __jsx(\"div\", {\n    className: \"h-full w-full flex items-center justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"loading...\"), __jsx(\"div\", {\n    className: \"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(IconsBtn, {\n    firstIcon: gridIcon,\n    secondIcon: listIcon,\n    isListView: isListView,\n    switchView: switchView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: `mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 ${gridClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, previews), __jsx(\"div\", {\n    className: \"flex justify-between my-6 lg:my-12 lg:mx-16 ip:mx-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"border border-gray-400 px-2 py-1 lg:px-4 lg:py-2 rounded-lg hover:border-gray-800 ease-in\",\n    onClick: () => setIndex(index - PAGE_SIZE),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, rightArrow, __jsx(\"span\", {\n    className: \"hidden lg:inline pl-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0430\\u044F\")), __jsx(\"button\", {\n    className: \"border border-gray-400 px-2 py-1 lg:px-4 lg:py-2 rounded-lg hover:border-gray-800 ease-in\",\n    onClick: () => setSize(size + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"hidden lg:inline pr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u0434\\u0435\\u0434\\u0443\\u044E\\u0449\\u0430\\u044F\"), leftArrow)));\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/index.js"],"names":["React","useEffect","useState","Layout","getAllPosts","useToggle","IconsBtn","gridIcon","listIcon","rightArrow","leftArrow","PostCard","useWindowWidth","dataDDD","fetcher","getKey","useGetPosts","Button","PAGE_SIZE","useSWRInfinite","previews","App","posts","isToggled","isListView","setToggle","setListView","toggle","switchView","index","setIndex","paginatedPosts","setPaginatedPosts","width","initialData","gridClass","setSize","size","getStaticProps","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,EAAyCC,SAAzC,QAA0D,cAA1D;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmCC,WAAnC,QAAsD,YAAtD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,KAA/B;AACA,OAAOC,QAAP,MAAqB,sCAArB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACzB,QAAM;AACJC,IAAAA,SAAS,EAAEC,UADP;AAEJC,IAAAA,SAAS,EAAEC,WAFP;AAGJC,IAAAA,MAAM,EAAEC;AAHJ,MAIFvB,SAAS,EAJb;AAMA,QAAM;AAAA,OAACwB,KAAD;AAAA,OAAQC;AAAR,MAAoB5B,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAAC6B,cAAD;AAAA,OAAiBC;AAAjB,MAAsC9B,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAM+B,KAAK,GAAGrB,cAAc,EAA5B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM8B,cAAc,GAAGX,QAAQ,EAA/B;AACAY,IAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACD,GAHQ,CAAT;AAKA9B,EAAAA,SAAS,CAAC,MAAM;AACdgC,IAAAA,KAAK,IAAI,GAAT,IAAgBP,WAAW,CAAC,KAAD,CAA3B;AACD,GAFQ,EAEN,CAACO,KAAD,CAFM,CAAT;AAIA,QAAMC,WAAW,GAAG,CAACL,KAAD,IAAUP,KAA9B;AAEA,QAAMa,SAAS,GAAGX,UAAU,GACxB,UADwB,GAExB,iDAFJ;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACO,cAAD,IACC;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAME;AAAK,IAAA,SAAS,EAAC,gFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,SAAS,EAAExB,QADb;AAEE,IAAA,UAAU,EAAEC,QAFd;AAGE,IAAA,UAAU,EAAEgB,UAHd;AAIE,IAAA,UAAU,EAAEI,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAcE;AACE,IAAA,SAAS,EAAG,iDAAgDO,SAAU,EADxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGf,QAHH,CAdF,EAmBE;AAAK,IAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,2FADZ;AAEE,IAAA,OAAO,EAAE,MAAMU,QAAQ,CAACD,KAAK,GAAGX,SAAT,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGT,UAJH,EAKE;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEALF,CADF,EASE;AACE,IAAA,SAAS,EAAC,2FADZ;AAEE,IAAA,OAAO,EAAE,MAAM2B,OAAO,CAACC,IAAI,GAAG,CAAR,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAJF,EAKG3B,SALH,CATF,CAnBF,CADF;AAuCD,CAlED;;AAoEA,OAAO,eAAe4B,cAAf,GAAgC;AACrC,QAAMhB,KAAK,GAAG,MAAMlB,WAAW,CAAC,CAAD,CAA/B;AACA,SAAO;AACLmC,IAAAA,KAAK,EAAE;AACLjB,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon, rightArrow, leftArrow } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { dataDDD, fetcher, getKey, useGetPosts } from \"../actions\";\nimport { Button } from \"semantic-ui-react\";\nimport { PAGE_SIZE } from \"../lib/vars\";\nimport { useSWRInfinite } from \"swr\";\nimport previews from \"../components/posts-preview/previews\";\n\nconst App = ({ posts }) => {\n  const {\n    isToggled: isListView,\n    setToggle: setListView,\n    toggle: switchView,\n  } = useToggle();\n\n  const [index, setIndex] = useState(0);\n  const [paginatedPosts, setPaginatedPosts] = useState([]);\n\n  const width = useWindowWidth();\n\n  useEffect(() => {\n    const paginatedPosts = previews();\n    setPaginatedPosts(paginatedPosts);\n  });\n\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n\n  const initialData = !index && posts;\n\n  const gridClass = isListView\n    ? \"md:mx-16\"\n    : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n\n  return (\n    <Layout>\n      {!paginatedPosts && (\n        <div className=\"h-full w-full flex items-center justify-center\">\n          loading...\n        </div>\n      )}\n      <div className=\"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\">\n        <IconsBtn\n          firstIcon={gridIcon}\n          secondIcon={listIcon}\n          isListView={isListView}\n          switchView={switchView}\n        />\n      </div>\n      <div\n        className={`mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 ${gridClass}`}\n      >\n        {previews}\n      </div>\n      <div className=\"flex justify-between my-6 lg:my-12 lg:mx-16 ip:mx-64\">\n        <button\n          className=\"border border-gray-400 px-2 py-1 lg:px-4 lg:py-2 rounded-lg hover:border-gray-800 ease-in\"\n          onClick={() => setIndex(index - PAGE_SIZE)}\n        >\n          {rightArrow}\n          <span className=\"hidden lg:inline pl-2\">Предыдущая</span>\n        </button>\n\n        <button\n          className=\"border border-gray-400 px-2 py-1 lg:px-4 lg:py-2 rounded-lg hover:border-gray-800 ease-in\"\n          onClick={() => setSize(size + 1)}\n        >\n          <span className=\"hidden lg:inline pr-2\">Сдедующая</span>\n          {leftArrow}\n        </button>\n      </div>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}