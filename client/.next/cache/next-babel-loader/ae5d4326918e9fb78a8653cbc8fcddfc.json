{"ast":null,"code":"import imageUrlBuilder from \"@sanity/image-url\";\nimport client from \"./client\";\nexport const urlFor = source => {\n  return imageUrlBuilder(client).image(source);\n};\nexport const handleScroll = (size, func) => {\n  const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\n  const body = document.body;\n  const html = document.documentElement;\n  const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n  const windowBottom = windowHeight + window.pageYOffset;\n\n  if (windowBottom >= docHeight) {\n    func(size);\n  } else {\n    console.log(\"top\");\n  }\n};","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/lib/helpers.js"],"names":["imageUrlBuilder","client","urlFor","source","image","handleScroll","size","func","windowHeight","window","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","windowBottom","pageYOffset","console","log"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAOH,eAAe,CAACC,MAAD,CAAf,CAAwBG,KAAxB,CAA8BD,MAA9B,CAAP;AACD,CAFM;AAIP,OAAO,MAAME,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC1C,QAAMC,YAAY,GAChB,iBAAiBC,MAAjB,GACIA,MAAM,CAACC,WADX,GAEIC,QAAQ,CAACC,eAAT,CAAyBC,YAH/B;AAIA,QAAMC,IAAI,GAAGH,QAAQ,CAACG,IAAtB;AACA,QAAMC,IAAI,GAAGJ,QAAQ,CAACC,eAAtB;AACA,QAAMI,SAAS,GAAGC,IAAI,CAACC,GAAL,CAChBJ,IAAI,CAACK,YADW,EAEhBL,IAAI,CAACD,YAFW,EAGhBE,IAAI,CAACK,YAHW,EAIhBL,IAAI,CAACI,YAJW,EAKhBJ,IAAI,CAACF,YALW,CAAlB;AAOA,QAAMQ,YAAY,GAAGb,YAAY,GAAGC,MAAM,CAACa,WAA3C;;AACA,MAAID,YAAY,IAAIL,SAApB,EAA+B;AAC7BT,IAAAA,IAAI,CAACD,IAAD,CAAJ;AACD,GAFD,MAEO;AACLiB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AACF,CApBM","sourcesContent":["import imageUrlBuilder from \"@sanity/image-url\";\nimport client from \"./client\";\n\nexport const urlFor = (source) => {\n  return imageUrlBuilder(client).image(source);\n};\n\nexport const handleScroll = (size, func) => {\n  const windowHeight =\n    \"innerHeight\" in window\n      ? window.innerHeight\n      : document.documentElement.offsetHeight;\n  const body = document.body;\n  const html = document.documentElement;\n  const docHeight = Math.max(\n    body.scrollHeight,\n    body.offsetHeight,\n    html.clientHeight,\n    html.scrollHeight,\n    html.offsetHeight\n  );\n  const windowBottom = windowHeight + window.pageYOffset;\n  if (windowBottom >= docHeight) {\n    func(size);\n  } else {\n    console.log(\"top\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}