{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/earth/WebstormProjects/arminian-perspective-blog/client/context/global.context.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createContext, useEffect } from \"react\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nexport var GlobalContext = /*#__PURE__*/createContext(undefined);\nexport var GlobalProvider = function GlobalProvider(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var children = _ref.children;\n  var width;\n  useEffect(_s(function () {\n    _s();\n\n    width = useWindowWidth();\n  }, \"/fu7Wn6/mODT+TH9iPi52jmK3ww=\", false, function () {\n    return [useWindowWidth];\n  }));\n\n  var _useToggle = useToggle(),\n      isListView = _useToggle.isToggled,\n      setListView = _useToggle.setToggle,\n      switchView = _useToggle.toggle;\n\n  return __jsx(GlobalContext.Provider, {\n    value: {\n      width: width,\n      isListView: isListView,\n      setListView: setListView,\n      switchView: switchView\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s2(GlobalProvider, \"UPWBAI+akL4vCTY8gO9DnwD5a+0=\", false, function () {\n  return [useToggle];\n});\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/Users/earth/WebstormProjects/arminian-perspective-blog/client/context/global.context.js"],"names":["React","createContext","useEffect","useToggle","useWindowWidth","GlobalContext","undefined","GlobalProvider","children","width","isListView","isToggled","setListView","setToggle","switchView","toggle"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,OAAO,IAAMC,aAAa,gBAAGJ,aAAa,CAACK,SAAD,CAAnC;AAEP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA;;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC9C,MAAIC,KAAJ;AAEAP,EAAAA,SAAS,IAAC,YAAM;AAAA;;AACdO,IAAAA,KAAK,GAAGL,cAAc,EAAtB;AACD,GAFQ;AAAA,YACCA,cADD;AAAA,KAAT;;AAH8C,mBAW1CD,SAAS,EAXiC;AAAA,MAQjCO,UARiC,cAQ5CC,SAR4C;AAAA,MASjCC,WATiC,cAS5CC,SAT4C;AAAA,MAUpCC,UAVoC,cAU5CC,MAV4C;;AAa9C,SACE,MAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AAAEN,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,UAAU,EAAVA,UAAT;AAAqBE,MAAAA,WAAW,EAAXA,WAArB;AAAkCE,MAAAA,UAAU,EAAVA;AAAlC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGN,QAHH,CADF;AAOD,CApBM;;IAAMD,c;UAWPJ,S;;;KAXOI,c","sourcesContent":["import React, { createContext, useEffect } from \"react\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\n\nexport const GlobalContext = createContext(undefined);\n\nexport const GlobalProvider = ({ children }) => {\n  let width;\n\n  useEffect(() => {\n    width = useWindowWidth();\n  });\n\n  const {\n    isToggled: isListView,\n    setToggle: setListView,\n    toggle: switchView,\n  } = useToggle();\n\n  return (\n    <GlobalContext.Provider\n      value={{ width, isListView, setListView, switchView }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}