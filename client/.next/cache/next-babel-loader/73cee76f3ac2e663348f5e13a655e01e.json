{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon, rightArrow, leftArrow } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { dataDDD, fetcher, getKey, useGetPosts } from \"../actions\";\nimport { Button } from \"semantic-ui-react\";\nimport { PAGE_SIZE } from \"../lib/vars\";\nimport { useSWRInfinite } from \"swr\";\n\nvar App = function App(_ref) {\n  _s();\n\n  var posts = _ref.posts;\n\n  var _useToggle = useToggle(),\n      isListView = _useToggle.isToggled,\n      setListView = _useToggle.setToggle,\n      switchView = _useToggle.toggle;\n\n  var _useState = useState(0),\n      index = _useState[0],\n      setIndex = _useState[1];\n\n  var width = useWindowWidth();\n  useEffect(function () {\n    var y = window.scrollY;\n    console.log(y);\n    width <= 768 && setListView(false);\n  }, [width, y]);\n  var initialData = [posts];\n\n  var _useGetPosts = useGetPosts(initialData),\n      paginatedPosts = _useGetPosts.data,\n      size = _useGetPosts.size,\n      setSize = _useGetPosts.setSize;\n\n  if (!paginatedPosts) return \"loading\";\n  var previews = paginatedPosts && paginatedPosts.map(function (el) {\n    return el.map(function (_ref2) {\n      var _id = _ref2._id,\n          title = _ref2.title,\n          subtitle = _ref2.subtitle,\n          slug = _ref2.slug,\n          mainImage = _ref2.mainImage,\n          publishedAt = _ref2.publishedAt,\n          body = _ref2.body;\n      return __jsx(PostCard, {\n        key: _id,\n        title: title,\n        subtitle: subtitle,\n        slug: slug,\n        mainImage: mainImage,\n        publishedAt: publishedAt,\n        body: body,\n        isListView: isListView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      });\n    });\n  });\n  var gridClass = isListView ? \"md:mx-16\" : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, !paginatedPosts && __jsx(\"div\", {\n    className: \"h-full w-full flex items-center justify-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"loading...\"), __jsx(\"div\", {\n    className: \"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(IconsBtn, {\n    firstIcon: gridIcon,\n    secondIcon: listIcon,\n    isListView: isListView,\n    switchView: switchView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 \".concat(gridClass),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, previews), __jsx(\"div\", {\n    className: \"flex justify-between my-6 lg:my-12 lg:mx-16 ip:mx-64\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"border border-gray-400 px-2 py-1 lg:px-4 lg:py-2 rounded-lg hover:border-gray-800 ease-in\",\n    onClick: function onClick() {\n      return setIndex(index - PAGE_SIZE);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, rightArrow, __jsx(\"span\", {\n    className: \"hidden lg:inline pl-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0430\\u044F\")), __jsx(\"button\", {\n    className: \"border border-gray-400 px-2 py-1 lg:px-4 lg:py-2 rounded-lg hover:border-gray-800 ease-in\",\n    onClick: function onClick() {\n      return setSize(size + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"hidden lg:inline pr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u0434\\u0435\\u0434\\u0443\\u044E\\u0449\\u0430\\u044F\"), leftArrow)));\n};\n\n_s(App, \"DLxKuMPFRwujZ/naATP8dhvGdHo=\", false, function () {\n  return [useToggle, useWindowWidth, useGetPosts];\n});\n\n_c = App;\nexport var __N_SSG = true;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/index.js"],"names":["React","useEffect","useState","Layout","useToggle","IconsBtn","gridIcon","listIcon","rightArrow","leftArrow","PostCard","useWindowWidth","dataDDD","fetcher","getKey","useGetPosts","Button","PAGE_SIZE","useSWRInfinite","App","posts","isListView","isToggled","setListView","setToggle","switchView","toggle","index","setIndex","width","y","window","scrollY","console","log","initialData","paginatedPosts","data","size","setSize","previews","map","el","_id","title","subtitle","slug","mainImage","publishedAt","body","gridClass"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon, rightArrow, leftArrow } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { dataDDD, fetcher, getKey, useGetPosts } from \"../actions\";\nimport { Button } from \"semantic-ui-react\";\nimport { PAGE_SIZE } from \"../lib/vars\";\nimport { useSWRInfinite } from \"swr\";\n\nconst App = ({ posts }) => {\n  const {\n    isToggled: isListView,\n    setToggle: setListView,\n    toggle: switchView,\n  } = useToggle();\n\n  const [index, setIndex] = useState(0);\n\n  const width = useWindowWidth();\n\n  useEffect(() => {\n    const y = window.scrollY;\n    console.log(y);\n    width <= 768 && setListView(false);\n  }, [width, y]);\n\n  const initialData = [posts];\n\n  const { data: paginatedPosts, size, setSize } = useGetPosts(initialData);\n\n  if (!paginatedPosts) return \"loading\";\n\n  const previews =\n    paginatedPosts &&\n    paginatedPosts.map((el) =>\n      el.map(({ _id, title, subtitle, slug, mainImage, publishedAt, body }) => (\n        <PostCard\n          key={_id}\n          title={title}\n          subtitle={subtitle}\n          slug={slug}\n          mainImage={mainImage}\n          publishedAt={publishedAt}\n          body={body}\n          isListView={isListView}\n        />\n      ))\n    );\n\n  const gridClass = isListView\n    ? \"md:mx-16\"\n    : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n\n  return (\n    <Layout>\n      {!paginatedPosts && (\n        <div className=\"h-full w-full flex items-center justify-center\">\n          loading...\n        </div>\n      )}\n      <div className=\"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\">\n        <IconsBtn\n          firstIcon={gridIcon}\n          secondIcon={listIcon}\n          isListView={isListView}\n          switchView={switchView}\n        />\n      </div>\n      <div\n        className={`mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 ${gridClass}`}\n      >\n        {previews}\n      </div>\n      <div className=\"flex justify-between my-6 lg:my-12 lg:mx-16 ip:mx-64\">\n        <button\n          className=\"border border-gray-400 px-2 py-1 lg:px-4 lg:py-2 rounded-lg hover:border-gray-800 ease-in\"\n          onClick={() => setIndex(index - PAGE_SIZE)}\n        >\n          {rightArrow}\n          <span className=\"hidden lg:inline pl-2\">Предыдущая</span>\n        </button>\n\n        <button\n          className=\"border border-gray-400 px-2 py-1 lg:px-4 lg:py-2 rounded-lg hover:border-gray-800 ease-in\"\n          onClick={() => setSize(size + 1)}\n        >\n          <span className=\"hidden lg:inline pr-2\">Сдедующая</span>\n          {leftArrow}\n        </button>\n      </div>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}