{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\context\\\\global.context.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createContext, useState } from \"react\";\nimport Link from \"next/link\";\nimport { useToggle } from \"../hooks/useToggle\";\nexport var GlobalContext = /*#__PURE__*/createContext(undefined, undefined);\nexport var GlobalProvider = function GlobalProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useToggle = useToggle(),\n      isToggled = _useToggle.isToggled,\n      setToggle = _useToggle.setToggle,\n      toggle = _useToggle.toggle;\n\n  var _useState = useState(false),\n      isOpened = _useState[0],\n      setOpen = _useState[1];\n\n  var open = function open() {\n    return setOpen(!isOpened);\n  };\n\n  var pages = {\n    blog: \"блог\",\n    about: \"об этом блоге\",\n    statement: \"утверждение веры\",\n    give: \"поддержи проект\"\n  };\n  var links = Object.keys(pages).map(function (link) {\n    return __jsx(\"li\", {\n      className: \"pb-12 lg:pl-4 \",\n      key: link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(Link, {\n      href: link === \"blog\" ? \"/\" : \"/\".concat(link),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, pages[link])));\n  });\n  return __jsx(GlobalContext.Provider, {\n    value: {\n      links: links,\n      open: open\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(GlobalProvider, \"NClM+ZfDbyDMIEA/jcaPmFp98VA=\", false, function () {\n  return [useToggle];\n});\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/context/global.context.js"],"names":["React","createContext","useState","Link","useToggle","GlobalContext","undefined","GlobalProvider","children","isToggled","setToggle","toggle","isOpened","setOpen","open","pages","blog","about","statement","give","links","Object","keys","map","link"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAO,IAAMC,aAAa,gBAAGJ,aAAa,CAACK,SAAD,EAAYA,SAAZ,CAAnC;AAEP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,mBACLJ,SAAS,EADJ;AAAA,MACtCK,SADsC,cACtCA,SADsC;AAAA,MAC3BC,SAD2B,cAC3BA,SAD2B;AAAA,MAChBC,MADgB,cAChBA,MADgB;;AAAA,kBAGlBT,QAAQ,CAAC,KAAD,CAHU;AAAA,MAGvCU,QAHuC;AAAA,MAG7BC,OAH6B;;AAK9C,MAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,WAAMD,OAAO,CAAC,CAACD,QAAF,CAAb;AAAA,GAAb;;AAEA,MAAMG,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,MADM;AAEZC,IAAAA,KAAK,EAAE,eAFK;AAGZC,IAAAA,SAAS,EAAE,kBAHC;AAIZC,IAAAA,IAAI,EAAE;AAJM,GAAd;AAOA,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBQ,GAAnB,CAAuB,UAACC,IAAD,EAAU;AAC7C,WACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAA+B,MAAA,GAAG,EAAEA,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAI,KAAK,MAAT,GAAkB,GAAlB,cAA4BA,IAA5B,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIT,KAAK,CAACS,IAAD,CAAT,CADF,CADF,CADF;AAOD,GARa,CAAd;AAUA,SACE,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAK,EAALA,KAAF;AAASN,MAAAA,IAAI,EAAJA;AAAT,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QADH,CADF;AAKD,CA7BM;;GAAMD,c;UAC8BH,S;;;KAD9BG,c","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport Link from \"next/link\";\nimport { useToggle } from \"../hooks/useToggle\";\n\nexport const GlobalContext = createContext(undefined, undefined);\n\nexport const GlobalProvider = ({ children }) => {\n  const { isToggled, setToggle, toggle } = useToggle();\n\n  const [isOpened, setOpen] = useState(false);\n\n  const open = () => setOpen(!isOpened);\n\n  const pages = {\n    blog: \"блог\",\n    about: \"об этом блоге\",\n    statement: \"утверждение веры\",\n    give: \"поддержи проект\",\n  };\n\n  const links = Object.keys(pages).map((link) => {\n    return (\n      <li className=\"pb-12 lg:pl-4 \" key={link}>\n        <Link href={link === \"blog\" ? \"/\" : `/${link}`}>\n          <a>{pages[link]}</a>\n        </Link>\n      </li>\n    );\n  });\n\n  return (\n    <GlobalContext.Provider value={{ links, open }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}