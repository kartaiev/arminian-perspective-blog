{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon, rightArrow, leftArrow } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { dataDDD, fetcher, getKey, useGetPosts } from \"../actions\";\nimport { Button } from \"semantic-ui-react\";\nimport { PAGE_SIZE } from \"../lib/vars\";\nimport { useSWRInfinite } from \"swr\";\n\nconst App = ({\n  posts\n}) => {\n  const {\n    isToggled: isListView,\n    setToggle: setListView,\n    toggle: switchView\n  } = useToggle();\n  const {\n    0: index,\n    1: setIndex\n  } = useState(0);\n  const width = useWindowWidth();\n  let y = 0;\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width, y]);\n  console.log(y);\n  const initialData = [posts];\n  let previews = [];\n\n  const handleScroll = e => {\n    const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\n\n    if (bottom) {\n      const {\n        data: paginatedPosts,\n        size,\n        setSize\n      } = useGetPosts(initialData);\n      if (!paginatedPosts) return \"loading\";\n      previews = paginatedPosts && paginatedPosts.map(el => el.map(({\n        _id,\n        title,\n        subtitle,\n        slug,\n        mainImage,\n        publishedAt,\n        body\n      }) => __jsx(PostCard, {\n        key: _id,\n        title: title,\n        subtitle: subtitle,\n        slug: slug,\n        mainImage: mainImage,\n        publishedAt: publishedAt,\n        body: body,\n        isListView: isListView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      })));\n    }\n  };\n\n  const gridClass = isListView ? \"md:mx-16\" : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, !paginatedPosts && __jsx(\"div\", {\n    className: \"h-full w-full flex items-center justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"loading...\"), __jsx(\"div\", {\n    className: \"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(IconsBtn, {\n    firstIcon: gridIcon,\n    secondIcon: listIcon,\n    isListView: isListView,\n    switchView: switchView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: `mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 ${gridClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, previews), __jsx(\"div\", {\n    className: \"flex justify-between my-6 lg:my-12 lg:mx-16 ip:mx-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"border border-gray-400 px-2 py-1 lg:px-4 lg:py-2 rounded-lg hover:border-gray-800 ease-in\",\n    onClick: () => setIndex(index - PAGE_SIZE),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, rightArrow, __jsx(\"span\", {\n    className: \"hidden lg:inline pl-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0430\\u044F\")), __jsx(\"button\", {\n    className: \"border border-gray-400 px-2 py-1 lg:px-4 lg:py-2 rounded-lg hover:border-gray-800 ease-in\",\n    onClick: () => setSize(size + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"hidden lg:inline pr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"\\u0421\\u0434\\u0435\\u0434\\u0443\\u044E\\u0449\\u0430\\u044F\"), leftArrow)));\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/index.js"],"names":["React","useEffect","useState","Layout","getAllPosts","useToggle","IconsBtn","gridIcon","listIcon","rightArrow","leftArrow","PostCard","useWindowWidth","dataDDD","fetcher","getKey","useGetPosts","Button","PAGE_SIZE","useSWRInfinite","App","posts","isToggled","isListView","setToggle","setListView","toggle","switchView","index","setIndex","width","y","console","log","initialData","previews","handleScroll","e","bottom","target","scrollHeight","scrollTop","clientHeight","data","paginatedPosts","size","setSize","map","el","_id","title","subtitle","slug","mainImage","publishedAt","body","gridClass","getStaticProps","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,EAAyCC,SAAzC,QAA0D,cAA1D;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmCC,WAAnC,QAAsD,YAAtD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,QAA+B,KAA/B;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACzB,QAAM;AACJC,IAAAA,SAAS,EAAEC,UADP;AAEJC,IAAAA,SAAS,EAAEC,WAFP;AAGJC,IAAAA,MAAM,EAAEC;AAHJ,MAIFtB,SAAS,EAJb;AAMA,QAAM;AAAA,OAACuB,KAAD;AAAA,OAAQC;AAAR,MAAoB3B,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAM4B,KAAK,GAAGlB,cAAc,EAA5B;AACA,MAAImB,CAAC,GAAG,CAAR;AAEA9B,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,KAAK,IAAI,GAAT,IAAgBL,WAAW,CAAC,KAAD,CAA3B;AACD,GAFQ,EAEN,CAACK,KAAD,EAAQC,CAAR,CAFM,CAAT;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAEA,QAAMG,WAAW,GAAG,CAACb,KAAD,CAApB;AACA,MAAIc,QAAQ,GAAG,EAAf;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAMC,MAAM,GACVD,CAAC,CAACE,MAAF,CAASC,YAAT,GAAwBH,CAAC,CAACE,MAAF,CAASE,SAAjC,KAA+CJ,CAAC,CAACE,MAAF,CAASG,YAD1D;;AAEA,QAAIJ,MAAJ,EAAY;AACV,YAAM;AAAEK,QAAAA,IAAI,EAAEC,cAAR;AAAwBC,QAAAA,IAAxB;AAA8BC,QAAAA;AAA9B,UAA0C9B,WAAW,CAACkB,WAAD,CAA3D;AAEA,UAAI,CAACU,cAAL,EAAqB,OAAO,SAAP;AAErBT,MAAAA,QAAQ,GACNS,cAAc,IACdA,cAAc,CAACG,GAAf,CAAoBC,EAAD,IACjBA,EAAE,CAACD,GAAH,CACE,CAAC;AAAEE,QAAAA,GAAF;AAAOC,QAAAA,KAAP;AAAcC,QAAAA,QAAd;AAAwBC,QAAAA,IAAxB;AAA8BC,QAAAA,SAA9B;AAAyCC,QAAAA,WAAzC;AAAsDC,QAAAA;AAAtD,OAAD,KACE,MAAC,QAAD;AACE,QAAA,GAAG,EAAEN,GADP;AAEE,QAAA,KAAK,EAAEC,KAFT;AAGE,QAAA,QAAQ,EAAEC,QAHZ;AAIE,QAAA,IAAI,EAAEC,IAJR;AAKE,QAAA,SAAS,EAAEC,SALb;AAME,QAAA,WAAW,EAAEC,WANf;AAOE,QAAA,IAAI,EAAEC,IAPR;AAQE,QAAA,UAAU,EAAEhC,UARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF,CAFF;AAkBD;AACF,GA3BD;;AA6BA,QAAMiC,SAAS,GAAGjC,UAAU,GACxB,UADwB,GAExB,iDAFJ;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACqB,cAAD,IACC;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAME;AAAK,IAAA,SAAS,EAAC,gFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,SAAS,EAAErC,QADb;AAEE,IAAA,UAAU,EAAEC,QAFd;AAGE,IAAA,UAAU,EAAEe,UAHd;AAIE,IAAA,UAAU,EAAEI,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAcE;AACE,IAAA,SAAS,EAAG,iDAAgD6B,SAAU,EADxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGrB,QAHH,CAdF,EAmBE;AAAK,IAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,2FADZ;AAEE,IAAA,OAAO,EAAE,MAAMN,QAAQ,CAACD,KAAK,GAAGV,SAAT,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGT,UAJH,EAKE;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEALF,CADF,EASE;AACE,IAAA,SAAS,EAAC,2FADZ;AAEE,IAAA,OAAO,EAAE,MAAMqC,OAAO,CAACD,IAAI,GAAG,CAAR,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAJF,EAKGnC,SALH,CATF,CAnBF,CADF;AAuCD,CA7FD;;AA+FA,OAAO,eAAe+C,cAAf,GAAgC;AACrC,QAAMpC,KAAK,GAAG,MAAMjB,WAAW,CAAC,CAAD,CAA/B;AACA,SAAO;AACLsD,IAAAA,KAAK,EAAE;AACLrC,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon, rightArrow, leftArrow } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { dataDDD, fetcher, getKey, useGetPosts } from \"../actions\";\nimport { Button } from \"semantic-ui-react\";\nimport { PAGE_SIZE } from \"../lib/vars\";\nimport { useSWRInfinite } from \"swr\";\n\nconst App = ({ posts }) => {\n  const {\n    isToggled: isListView,\n    setToggle: setListView,\n    toggle: switchView,\n  } = useToggle();\n\n  const [index, setIndex] = useState(0);\n\n  const width = useWindowWidth();\n  let y = 0;\n\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width, y]);\n\n  console.log(y);\n\n  const initialData = [posts];\n  let previews = [];\n\n  const handleScroll = (e) => {\n    const bottom =\n      e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\n    if (bottom) {\n      const { data: paginatedPosts, size, setSize } = useGetPosts(initialData);\n\n      if (!paginatedPosts) return \"loading\";\n\n      previews =\n        paginatedPosts &&\n        paginatedPosts.map((el) =>\n          el.map(\n            ({ _id, title, subtitle, slug, mainImage, publishedAt, body }) => (\n              <PostCard\n                key={_id}\n                title={title}\n                subtitle={subtitle}\n                slug={slug}\n                mainImage={mainImage}\n                publishedAt={publishedAt}\n                body={body}\n                isListView={isListView}\n              />\n            )\n          )\n        );\n    }\n  };\n\n  const gridClass = isListView\n    ? \"md:mx-16\"\n    : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n\n  return (\n    <Layout>\n      {!paginatedPosts && (\n        <div className=\"h-full w-full flex items-center justify-center\">\n          loading...\n        </div>\n      )}\n      <div className=\"hidden h-10 mt-6 justify-start items-center lg:flex md:px-16 xl:px-16 ip:px-64\">\n        <IconsBtn\n          firstIcon={gridIcon}\n          secondIcon={listIcon}\n          isListView={isListView}\n          switchView={switchView}\n        />\n      </div>\n      <div\n        className={`mb-6 grid grid-cols-1 gap-6 lg:mx-16 ip:mx-64 ${gridClass}`}\n      >\n        {previews}\n      </div>\n      <div className=\"flex justify-between my-6 lg:my-12 lg:mx-16 ip:mx-64\">\n        <button\n          className=\"border border-gray-400 px-2 py-1 lg:px-4 lg:py-2 rounded-lg hover:border-gray-800 ease-in\"\n          onClick={() => setIndex(index - PAGE_SIZE)}\n        >\n          {rightArrow}\n          <span className=\"hidden lg:inline pl-2\">Предыдущая</span>\n        </button>\n\n        <button\n          className=\"border border-gray-400 px-2 py-1 lg:px-4 lg:py-2 rounded-lg hover:border-gray-800 ease-in\"\n          onClick={() => setSize(size + 1)}\n        >\n          <span className=\"hidden lg:inline pr-2\">Сдедующая</span>\n          {leftArrow}\n        </button>\n      </div>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}