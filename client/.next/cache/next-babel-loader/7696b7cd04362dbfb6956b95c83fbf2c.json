{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/earth/WebstormProjects/arminian-perspective-blog/client/context/global.context.js\";\nimport React, { createContext } from \"react\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport { useWindowSize } from \"../hooks/useWindowSize\";\nexport const GlobalContext = /*#__PURE__*/createContext(undefined);\nexport const GlobalProvider = ({\n  children\n}) => {\n  const width = useWindowSize().width;\n  console.log(width);\n  const {\n    isToggled: isListView,\n    setToggle: setListView,\n    toggle: switchView\n  } = useToggle();\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      width,\n      isListView,\n      setListView,\n      switchView\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/earth/WebstormProjects/arminian-perspective-blog/client/context/global.context.js"],"names":["React","createContext","useToggle","useWindowSize","GlobalContext","undefined","GlobalProvider","children","width","console","log","isToggled","isListView","setToggle","setListView","toggle","switchView"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,MAAMC,aAAa,gBAAGH,aAAa,CAACI,SAAD,CAAnC;AAEP,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAMC,KAAK,GAAGL,aAAa,GAAGK,KAA9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAM;AACJG,IAAAA,SAAS,EAAEC,UADP;AAEJC,IAAAA,SAAS,EAAEC,WAFP;AAGJC,IAAAA,MAAM,EAAEC;AAHJ,MAIFd,SAAS,EAJb;AAMA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAF;AAASI,MAAAA,UAAT;AAAqBE,MAAAA,WAArB;AAAkCE,MAAAA;AAAlC,KADT;AAAA,cAGGT;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjBM","sourcesContent":["import React, { createContext } from \"react\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport { useWindowSize } from \"../hooks/useWindowSize\";\n\nexport const GlobalContext = createContext(undefined);\n\nexport const GlobalProvider = ({ children }) => {\n  const width = useWindowSize().width;\n  console.log(width);\n\n  const {\n    isToggled: isListView,\n    setToggle: setListView,\n    toggle: switchView,\n  } = useToggle();\n\n  return (\n    <GlobalContext.Provider\n      value={{ width, isListView, setListView, switchView }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}