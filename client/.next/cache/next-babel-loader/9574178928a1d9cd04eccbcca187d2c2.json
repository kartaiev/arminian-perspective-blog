{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport PostGridCard from \"../components/posts-preview/PostGridCard\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon } from \"../lib/icons\";\nimport PostListCard from \"../components/posts-preview/PostListCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\n\nvar App = function App(_ref) {\n  _s();\n\n  var _ref$posts = _ref.posts,\n      posts = _ref$posts === void 0 ? [] : _ref$posts;\n\n  var _useToggle = useToggle(),\n      isToggled = _useToggle.isToggled,\n      setToggle = _useToggle.setToggle,\n      toggle = _useToggle.toggle; // const [width, setWidth] = useState(0);\n  //\n  // useEffect(() => {\n  //   setWidth(window.innerWidth);\n  //   width <= 1024 && setToggle(false);\n  // }, []);\n\n\n  var width = useWindowWidth();\n  console.log(width);\n  var gridClass = isToggled ? \"xl:mx-64\" : \"lg:grid-cols-2 lg:mt-2 lg:mx-16 xl:mx-64 xl:grid-cols-3 xl:gap-12\";\n  var previews = posts.map(function (_ref2) {\n    var _id = _ref2._id,\n        title = _ref2.title,\n        subtitle = _ref2.subtitle,\n        slug = _ref2.slug,\n        mainImage = _ref2.mainImage,\n        publishedAt = _ref2.publishedAt,\n        body = _ref2.body;\n    return !isToggled ? __jsx(PostGridCard, {\n      key: _id,\n      title: title,\n      subtitle: subtitle,\n      slug: slug,\n      mainImage: mainImage,\n      publishedAt: publishedAt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }) : __jsx(PostListCard, {\n      key: _id,\n      title: title,\n      subtitle: subtitle,\n      slug: slug,\n      mainImage: mainImage,\n      publishedAt: publishedAt,\n      body: body,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    });\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"hidden h-10 lg:px-16 xl:px-64 mt-6 lg:flex justify-start items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(IconsBtn, {\n    firstIcon: gridIcon,\n    secondIcon: listIcon,\n    isToggled: isToggled,\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"mb-6 grid grid-cols-1 gap-6 \".concat(gridClass),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, previews));\n};\n\n_s(App, \"H1cqxfW9of0R++yP1La9JZUueL8=\", false, function () {\n  return [useToggle, useWindowWidth];\n});\n\n_c = App;\nexport var __N_SSG = true;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/index.js"],"names":["React","useEffect","useState","Layout","PostGridCard","useToggle","IconsBtn","gridIcon","listIcon","PostListCard","useWindowWidth","App","posts","isToggled","setToggle","toggle","width","console","log","gridClass","previews","map","_id","title","subtitle","slug","mainImage","publishedAt","body"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAGA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,cAAT,QAA+B,yBAA/B;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAoB;AAAA;;AAAA,wBAAjBC,KAAiB;AAAA,MAAjBA,KAAiB,2BAAT,EAAS;;AAAA,mBACWP,SAAS,EADpB;AAAA,MACtBQ,SADsB,cACtBA,SADsB;AAAA,MACXC,SADW,cACXA,SADW;AAAA,MACAC,MADA,cACAA,MADA,EAE9B;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,KAAK,GAAGN,cAAc,EAA5B;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,MAAMG,SAAS,GAAGN,SAAS,GACvB,UADuB,GAEvB,mEAFJ;AAIA,MAAMO,QAAQ,GAAGR,KAAK,CAACS,GAAN,CACf;AAAA,QAAGC,GAAH,SAAGA,GAAH;AAAA,QAAQC,KAAR,SAAQA,KAAR;AAAA,QAAeC,QAAf,SAAeA,QAAf;AAAA,QAAyBC,IAAzB,SAAyBA,IAAzB;AAAA,QAA+BC,SAA/B,SAA+BA,SAA/B;AAAA,QAA0CC,WAA1C,SAA0CA,WAA1C;AAAA,QAAuDC,IAAvD,SAAuDA,IAAvD;AAAA,WACE,CAACf,SAAD,GACE,MAAC,YAAD;AACE,MAAA,GAAG,EAAES,GADP;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,IAAI,EAAEC,IAJR;AAKE,MAAA,SAAS,EAAEC,SALb;AAME,MAAA,WAAW,EAAEC,WANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAUE,MAAC,YAAD;AACE,MAAA,GAAG,EAAEL,GADP;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,IAAI,EAAEC,IAJR;AAKE,MAAA,SAAS,EAAEC,SALb;AAME,MAAA,WAAW,EAAEC,WANf;AAOE,MAAA,IAAI,EAAEC,IAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ;AAAA,GADe,CAAjB;AAwBA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,SAAS,EAAErB,QADb;AAEE,IAAA,UAAU,EAAEC,QAFd;AAGE,IAAA,SAAS,EAAEK,SAHb;AAIE,IAAA,MAAM,EAAEE,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE;AAAK,IAAA,SAAS,wCAAiCI,SAAjC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CATF,CADF;AAeD,CAvDD;;GAAMT,G;UACqCN,S,EAO3BK,c;;;KARVC,G;;AAkEN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport PostGridCard from \"../components/posts-preview/PostGridCard\";\n\nimport { getAllPosts } from \"../lib/api\";\nimport { useToggle } from \"../hooks/useToggle\";\n\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon } from \"../lib/icons\";\nimport PostListCard from \"../components/posts-preview/PostListCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\n\nconst App = ({ posts = [] }) => {\n  const { isToggled, setToggle, toggle } = useToggle();\n  // const [width, setWidth] = useState(0);\n  //\n  // useEffect(() => {\n  //   setWidth(window.innerWidth);\n  //   width <= 1024 && setToggle(false);\n  // }, []);\n  const width = useWindowWidth();\n\n  console.log(width);\n\n  const gridClass = isToggled\n    ? \"xl:mx-64\"\n    : \"lg:grid-cols-2 lg:mt-2 lg:mx-16 xl:mx-64 xl:grid-cols-3 xl:gap-12\";\n\n  const previews = posts.map(\n    ({ _id, title, subtitle, slug, mainImage, publishedAt, body }) =>\n      !isToggled ? (\n        <PostGridCard\n          key={_id}\n          title={title}\n          subtitle={subtitle}\n          slug={slug}\n          mainImage={mainImage}\n          publishedAt={publishedAt}\n        />\n      ) : (\n        <PostListCard\n          key={_id}\n          title={title}\n          subtitle={subtitle}\n          slug={slug}\n          mainImage={mainImage}\n          publishedAt={publishedAt}\n          body={body}\n        />\n      )\n  );\n\n  return (\n    <Layout>\n      <div className=\"hidden h-10 lg:px-16 xl:px-64 mt-6 lg:flex justify-start items-center\">\n        <IconsBtn\n          firstIcon={gridIcon}\n          secondIcon={listIcon}\n          isToggled={isToggled}\n          toggle={toggle}\n        />\n      </div>\n      <div className={`mb-6 grid grid-cols-1 gap-6 ${gridClass}`}>\n        {previews}\n      </div>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts();\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}