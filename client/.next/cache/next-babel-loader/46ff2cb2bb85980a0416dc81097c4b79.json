{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\blog\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport IconsBtn from \"../components/shared/IconsBtn\";\nimport { downChevron } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { FiList } from \"react-icons/fi\";\nimport { useGetPosts } from \"../actions\";\nimport Button from \"@chakra-ui/core/dist/Button\";\nimport { Skeleton, useColorMode } from \"@chakra-ui/core\";\nimport { ABOUT_TEXT, PAGE_SIZE } from \"../lib/vars\";\nimport { BsGrid } from \"react-icons/bs\";\nimport Box from \"@chakra-ui/core/dist/Box\";\nimport { borderColor, color, colorAlt } from \"../customTheme\";\nimport Grid from \"@chakra-ui/core/dist/Grid\";\nimport Divider from \"@chakra-ui/core/dist/Divider\";\nimport Text from \"@chakra-ui/core/dist/Text\";\nimport Heading from \"@chakra-ui/core/dist/Heading\";\nimport Previews from \"../components/posts-preview/Previews\";\n\nconst App = ({\n  posts\n}) => {\n  const {\n    setListView,\n    isListView,\n    switchView\n  } = useContext(GlobalContext);\n  const {\n    colorMode\n  } = useColorMode();\n  const width = useWindowWidth();\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n  const previews = paginatedPosts.map(el => el.map(({\n    _id,\n    title,\n    subtitle,\n    slug,\n    mainImage,\n    publishedAt,\n    body\n  }) => __jsx(PostCard, {\n    key: _id,\n    title: title,\n    subtitle: subtitle,\n    slug: slug,\n    mainImage: mainImage,\n    publishedAt: publishedAt,\n    body: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  })));\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    templateColumns: \"5fr auto 1fr\",\n    gap: 6,\n    color: color[colorMode],\n    className: \"article-body-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Previews, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), __jsx(Divider, {\n    borderColor: borderColor[colorMode],\n    orientation: \"vertical\",\n    my: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    mt: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    color: color[colorMode],\n    as: \"h1\",\n    fontSize: \"2xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"\\u041E \\u0441\\u0430\\u0439\\u0442\\u0435\"), __jsx(Text, {\n    pb: \"6\",\n    color: colorAlt[colorMode],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, ABOUT_TEXT), __jsx(Divider, {\n    borderColor: borderColor[colorMode],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/blog/arminian-perspective-blog/client/pages/index.js"],"names":["React","useContext","useEffect","Layout","getAllPosts","IconsBtn","downChevron","PostCard","useWindowWidth","GlobalContext","FiList","useGetPosts","Button","Skeleton","useColorMode","ABOUT_TEXT","PAGE_SIZE","BsGrid","Box","borderColor","color","colorAlt","Grid","Divider","Text","Heading","Previews","App","posts","setListView","isListView","switchView","colorMode","width","previews","paginatedPosts","map","el","_id","title","subtitle","slug","mainImage","publishedAt","body","getStaticProps","props"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport IconsBtn from \"../components/shared/IconsBtn\";\nimport { downChevron } from \"../lib/icons\";\nimport PostCard from \"../components/posts-preview/PostCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\nimport { GlobalContext } from \"../context/global.context\";\nimport { FiList } from \"react-icons/fi\";\nimport { useGetPosts } from \"../actions\";\nimport Button from \"@chakra-ui/core/dist/Button\";\nimport { Skeleton, useColorMode } from \"@chakra-ui/core\";\nimport { ABOUT_TEXT, PAGE_SIZE } from \"../lib/vars\";\nimport { BsGrid } from \"react-icons/bs\";\nimport Box from \"@chakra-ui/core/dist/Box\";\nimport { borderColor, color, colorAlt } from \"../customTheme\";\nimport Grid from \"@chakra-ui/core/dist/Grid\";\nimport Divider from \"@chakra-ui/core/dist/Divider\";\nimport Text from \"@chakra-ui/core/dist/Text\";\nimport Heading from \"@chakra-ui/core/dist/Heading\";\nimport Previews from \"../components/posts-preview/Previews\";\n\nconst App = ({ posts }) => {\n  const { setListView, isListView, switchView } = useContext(GlobalContext);\n\n  const { colorMode } = useColorMode();\n\n  const width = useWindowWidth();\n\n  useEffect(() => {\n    width <= 768 && setListView(false);\n  }, [width]);\n\n  const previews = paginatedPosts.map((el) =>\n    el.map(({ _id, title, subtitle, slug, mainImage, publishedAt, body }) => (\n      <PostCard\n        key={_id}\n        title={title}\n        subtitle={subtitle}\n        slug={slug}\n        mainImage={mainImage}\n        publishedAt={publishedAt}\n        body={body}\n      />\n    ))\n  );\n\n  return (\n    <Layout>\n      <Grid\n        templateColumns=\"5fr auto 1fr\"\n        gap={6}\n        color={color[colorMode]}\n        className=\"article-body-container\"\n      >\n        <Previews posts={posts} />\n        <Divider\n          borderColor={borderColor[colorMode]}\n          orientation=\"vertical\"\n          my=\"6\"\n        />\n        <Box mt=\"4\">\n          <Heading color={color[colorMode]} as=\"h1\" fontSize=\"2xl\">\n            О сайте\n          </Heading>\n          <Text pb=\"6\" color={colorAlt[colorMode]}>\n            {ABOUT_TEXT}\n          </Text>\n          <Divider borderColor={borderColor[colorMode]} />\n        </Box>\n      </Grid>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts(0);\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}