{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\blog\\\\arminian-perspective-blog\\\\client\\\\components\\\\posts-preview\\\\Previews.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport PostCard from \"./PostCard\";\nimport { useGetPosts } from \"../../actions\";\nimport { PAGE_SIZE } from \"../../lib/vars\";\nimport IconsBtn from \"../shared/IconsBtn\";\nimport { BsGrid } from \"react-icons/bs\";\nimport { FiList } from \"react-icons/fi\";\nimport { Skeleton, useColorMode } from \"@chakra-ui/core\";\nimport Box from \"@chakra-ui/core/dist/Box\";\nimport { borderColor, color } from \"../../customTheme\";\nimport Button from \"@chakra-ui/core/dist/Button\";\nimport { downChevron } from \"../../lib/icons\";\nimport { GlobalContext } from \"../../context/global.context\";\n\nconst Previews = ({\n  posts\n}) => {\n  var _paginatedPosts$, _paginatedPosts;\n\n  const {\n    isListView,\n    switchView\n  } = useContext(GlobalContext);\n  const {\n    colorMode\n  } = useColorMode();\n  const initialData = posts && [posts];\n  console.log(posts);\n  const {\n    data: paginatedPosts,\n    size,\n    setSize\n  } = useGetPosts(initialData);\n  if (!paginatedPosts) return \"loading\";\n  const isEmpty = (paginatedPosts === null || paginatedPosts === void 0 ? void 0 : (_paginatedPosts$ = paginatedPosts[0]) === null || _paginatedPosts$ === void 0 ? void 0 : _paginatedPosts$.length) === 0;\n  const isReachingEnd = isEmpty || paginatedPosts && ((_paginatedPosts = paginatedPosts[paginatedPosts[0].length - 1]) === null || _paginatedPosts === void 0 ? void 0 : _paginatedPosts.length) < PAGE_SIZE; // console.log(paginatedPosts[0]);\n\n  const previews = paginatedPosts[0].map(({\n    _id,\n    title,\n    subtitle,\n    slug,\n    mainImage,\n    publishedAt,\n    body\n  }) => slug && __jsx(PostCard, {\n    key: _id,\n    title: title,\n    subtitle: subtitle,\n    slug: slug,\n    mainImage: mainImage,\n    publishedAt: publishedAt,\n    body: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }));\n  const previewClass = isListView ? \"md:mx-16 ip:ml-48\" : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"view-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(IconsBtn, {\n    whileHover: {\n      scale: 1.2\n    },\n    firstIcon: BsGrid,\n    secondIcon: FiList,\n    toggle: switchView,\n    isToggled: isListView,\n    className: \"ease\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), __jsx(Skeleton, {\n    isLoaded: paginatedPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    color: color[colorMode],\n    className: `preview-container ${previewClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"hello\", previews)), __jsx(\"div\", {\n    className: \"preview-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    disabled: isReachingEnd,\n    size: \"lg\",\n    rounded: \"full\",\n    onClick: () => !isReachingEnd && setSize(size + 1),\n    variant: \"outline\",\n    borderColor: borderColor[colorMode],\n    _focus: {\n      outline: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, downChevron(isReachingEnd))));\n};\n\nexport default Previews;","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/blog/arminian-perspective-blog/client/components/posts-preview/Previews.js"],"names":["React","useContext","PostCard","useGetPosts","PAGE_SIZE","IconsBtn","BsGrid","FiList","Skeleton","useColorMode","Box","borderColor","color","Button","downChevron","GlobalContext","Previews","posts","isListView","switchView","colorMode","initialData","console","log","data","paginatedPosts","size","setSize","isEmpty","length","isReachingEnd","previews","map","_id","title","subtitle","slug","mainImage","publishedAt","body","previewClass","scale","outline"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport PostCard from \"./PostCard\";\nimport { useGetPosts } from \"../../actions\";\nimport { PAGE_SIZE } from \"../../lib/vars\";\nimport IconsBtn from \"../shared/IconsBtn\";\nimport { BsGrid } from \"react-icons/bs\";\nimport { FiList } from \"react-icons/fi\";\nimport { Skeleton, useColorMode } from \"@chakra-ui/core\";\nimport Box from \"@chakra-ui/core/dist/Box\";\nimport { borderColor, color } from \"../../customTheme\";\nimport Button from \"@chakra-ui/core/dist/Button\";\nimport { downChevron } from \"../../lib/icons\";\nimport { GlobalContext } from \"../../context/global.context\";\n\nconst Previews = ({ posts }) => {\n  const { isListView, switchView } = useContext(GlobalContext);\n\n  const { colorMode } = useColorMode();\n\n  const initialData = posts && [posts];\n  console.log(posts);\n\n  const { data: paginatedPosts, size, setSize } = useGetPosts(initialData);\n\n  if (!paginatedPosts) return \"loading\";\n\n  const isEmpty = paginatedPosts?.[0]?.length === 0;\n\n  const isReachingEnd =\n    isEmpty ||\n    (paginatedPosts &&\n      paginatedPosts[paginatedPosts[0].length - 1]?.length < PAGE_SIZE);\n\n  // console.log(paginatedPosts[0]);\n\n  const previews = paginatedPosts[0].map(\n    ({ _id, title, subtitle, slug, mainImage, publishedAt, body }) =>\n      slug && (\n        <PostCard\n          key={_id}\n          title={title}\n          subtitle={subtitle}\n          slug={slug}\n          mainImage={mainImage}\n          publishedAt={publishedAt}\n          body={body}\n        />\n      )\n  );\n\n  const previewClass = isListView\n    ? \"md:mx-16 ip:ml-48\"\n    : \"lg:grid-cols-2 lg:mt-2 ip:grid-cols-3 xl:gap-12\";\n\n  return (\n    <Box>\n      <div className=\"view-button-container\">\n        <IconsBtn\n          whileHover={{ scale: 1.2 }}\n          firstIcon={BsGrid}\n          secondIcon={FiList}\n          toggle={switchView}\n          isToggled={isListView}\n          className=\"ease\"\n        />\n      </div>\n      <Skeleton isLoaded={paginatedPosts}>\n        <Box\n          color={color[colorMode]}\n          className={`preview-container ${previewClass}`}\n        >\n          hello\n          {previews}\n        </Box>\n      </Skeleton>\n      <div className=\"preview-button-container\">\n        <Button\n          disabled={isReachingEnd}\n          size=\"lg\"\n          rounded=\"full\"\n          onClick={() => !isReachingEnd && setSize(size + 1)}\n          variant=\"outline\"\n          borderColor={borderColor[colorMode]}\n          _focus={{ outline: \"none\" }}\n        >\n          {downChevron(isReachingEnd)}\n        </Button>\n      </div>\n    </Box>\n  );\n};\n\nexport default Previews;\n"]},"metadata":{},"sourceType":"module"}