{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Volodymyr_Kartaiev\\\\WebstormProjects\\\\arminian-perspective-blog\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport PostGridCard from \"../components/posts-preview/PostGridCard\";\nimport { getAllPosts } from \"../lib/api\";\nimport { useToggle } from \"../hooks/useToggle\";\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon } from \"../lib/icons\";\nimport PostListCard from \"../components/posts-preview/PostListCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\n\nconst App = ({\n  posts = []\n}) => {\n  const {\n    isToggled,\n    setToggle,\n    toggle\n  } = useToggle();\n  const width = useWindowWidth(); // useEffect(() => {\n  //   width < 768 && setToggle(false);\n  //   console.log(isToggled);\n  // }, [width, isToggled]);\n\n  const gridClass = isToggled ? \"lg:px-16 xl:mx-64\" : \"lg:grid-cols-2 lg:mt-2 lg:mx-16 xl:mx-48 xl:grid-cols-3 xl:gap-12\";\n  const previews = posts.map(({\n    _id,\n    title,\n    subtitle,\n    slug,\n    mainImage,\n    publishedAt,\n    body\n  }) => isToggled ? __jsx(PostListCard, {\n    key: _id,\n    title: title,\n    subtitle: subtitle,\n    slug: slug,\n    mainImage: mainImage,\n    publishedAt: publishedAt,\n    body: body,\n    isToggled: isToggled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }) : __jsx(PostGridCard, {\n    key: _id,\n    title: title,\n    subtitle: subtitle,\n    slug: slug,\n    mainImage: mainImage,\n    publishedAt: publishedAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }));\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"hidden h-10 lg:px-16 xl:px-64 mt-6 lg:flex justify-start items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(IconsBtn, {\n    firstIcon: gridIcon,\n    secondIcon: listIcon,\n    isToggled: isToggled,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: `mb-6 grid grid-cols-1 gap-6 ${gridClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, previews));\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts();\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/Volodymyr_Kartaiev/WebstormProjects/arminian-perspective-blog/client/pages/index.js"],"names":["React","useEffect","useState","Layout","PostGridCard","getAllPosts","useToggle","IconsBtn","gridIcon","listIcon","PostListCard","useWindowWidth","App","posts","isToggled","setToggle","toggle","width","gridClass","previews","map","_id","title","subtitle","slug","mainImage","publishedAt","body","getStaticProps","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,cAAT,QAA+B,yBAA/B;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG;AAAV,CAAD,KAAoB;AAC9B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,MAAmCV,SAAS,EAAlD;AAEA,QAAMW,KAAK,GAAGN,cAAc,EAA5B,CAH8B,CAK9B;AACA;AACA;AACA;;AAEA,QAAMO,SAAS,GAAGJ,SAAS,GACvB,mBADuB,GAEvB,mEAFJ;AAIA,QAAMK,QAAQ,GAAGN,KAAK,CAACO,GAAN,CACf,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA,SAA9B;AAAyCC,IAAAA,WAAzC;AAAsDC,IAAAA;AAAtD,GAAD,KACEb,SAAS,GACP,MAAC,YAAD;AACE,IAAA,GAAG,EAAEO,GADP;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,IAAI,EAAEC,IAJR;AAKE,IAAA,SAAS,EAAEC,SALb;AAME,IAAA,WAAW,EAAEC,WANf;AAOE,IAAA,IAAI,EAAEC,IAPR;AAQE,IAAA,SAAS,EAAEb,SARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAYP,MAAC,YAAD;AACE,IAAA,GAAG,EAAEO,GADP;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,IAAI,EAAEC,IAJR;AAKE,IAAA,SAAS,EAAEC,SALb;AAME,IAAA,WAAW,EAAEC,WANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdW,CAAjB;AAyBA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,SAAS,EAAElB,QADb;AAEE,IAAA,UAAU,EAAEC,QAFd;AAGE,IAAA,SAAS,EAAEK,SAHb;AAIE,IAAA,MAAM,EAAEE,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE;AAAK,IAAA,SAAS,EAAG,+BAA8BE,SAAU,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CATF,CADF;AAeD,CAtDD;;AAwDA,OAAO,eAAeS,cAAf,GAAgC;AACrC,QAAMf,KAAK,GAAG,MAAMR,WAAW,EAA/B;AACA,SAAO;AACLwB,IAAAA,KAAK,EAAE;AACLhB,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport PostGridCard from \"../components/posts-preview/PostGridCard\";\n\nimport { getAllPosts } from \"../lib/api\";\nimport { useToggle } from \"../hooks/useToggle\";\n\nimport IconsBtn from \"../components/IconsBtn\";\nimport { gridIcon, listIcon } from \"../lib/icons\";\nimport PostListCard from \"../components/posts-preview/PostListCard\";\nimport { useWindowWidth } from \"../hooks/useWindowWidth\";\n\nconst App = ({ posts = [] }) => {\n  const { isToggled, setToggle, toggle } = useToggle();\n\n  const width = useWindowWidth();\n\n  // useEffect(() => {\n  //   width < 768 && setToggle(false);\n  //   console.log(isToggled);\n  // }, [width, isToggled]);\n\n  const gridClass = isToggled\n    ? \"lg:px-16 xl:mx-64\"\n    : \"lg:grid-cols-2 lg:mt-2 lg:mx-16 xl:mx-48 xl:grid-cols-3 xl:gap-12\";\n\n  const previews = posts.map(\n    ({ _id, title, subtitle, slug, mainImage, publishedAt, body }) =>\n      isToggled ? (\n        <PostListCard\n          key={_id}\n          title={title}\n          subtitle={subtitle}\n          slug={slug}\n          mainImage={mainImage}\n          publishedAt={publishedAt}\n          body={body}\n          isToggled={isToggled}\n        />\n      ) : (\n        <PostGridCard\n          key={_id}\n          title={title}\n          subtitle={subtitle}\n          slug={slug}\n          mainImage={mainImage}\n          publishedAt={publishedAt}\n        />\n      )\n  );\n\n  return (\n    <Layout>\n      <div className=\"hidden h-10 lg:px-16 xl:px-64 mt-6 lg:flex justify-start items-center\">\n        <IconsBtn\n          firstIcon={gridIcon}\n          secondIcon={listIcon}\n          isToggled={isToggled}\n          toggle={toggle}\n        />\n      </div>\n      <div className={`mb-6 grid grid-cols-1 gap-6 ${gridClass}`}>\n        {previews}\n      </div>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  const posts = await getAllPosts();\n  return {\n    props: {\n      posts,\n    },\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}